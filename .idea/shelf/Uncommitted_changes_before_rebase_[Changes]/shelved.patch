Index: src/main/java/com/eme22/bolo/settings/RepeatMode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright 2020 John Grosh <john.a.grosh@gmail.com>.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npackage com.eme22.bolo.settings;\r\n\r\nimport com.google.gson.TypeAdapter;\r\nimport com.google.gson.annotations.SerializedName;\r\nimport com.google.gson.stream.JsonReader;\r\nimport com.google.gson.stream.JsonWriter;\r\n\r\nimport java.io.IOException;\r\n\r\n/**\r\n *\r\n * @author Michaili K\r\n */\r\npublic enum RepeatMode\r\n{\r\n    @SerializedName(\"0\")\r\n    OFF(null, \"Off\"),\r\n    @SerializedName(\"1\")\r\n    ALL(\"\\uD83D\\uDD01\", \"All\"), // \uD83D\uDD01\r\n    @SerializedName(\"2\")\r\n    SINGLE(\"\\uD83D\\uDD02\", \"Single\"); // \uD83D\uDD02\r\n\r\n    private final String emoji;\r\n    private final String userFriendlyName;\r\n\r\n    private RepeatMode(String emoji, String userFriendlyName)\r\n    {\r\n        this.emoji = emoji;\r\n        this.userFriendlyName = userFriendlyName;\r\n    }\r\n\r\n    public String getEmoji()\r\n    {\r\n        return emoji;\r\n    }\r\n\r\n    public String getUserFriendlyName()\r\n    {\r\n        return userFriendlyName;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/eme22/bolo/settings/RepeatMode.java b/src/main/java/com/eme22/bolo/settings/RepeatMode.java
--- a/src/main/java/com/eme22/bolo/settings/RepeatMode.java	(revision e59a9e33c37365adb08ea3a1aa6fcbe3d980854e)
+++ b/src/main/java/com/eme22/bolo/settings/RepeatMode.java	(date 1646249914732)
@@ -15,24 +15,24 @@
  */
 package com.eme22.bolo.settings;
 
+import com.fasterxml.jackson.annotation.JsonFormat;
 import com.google.gson.TypeAdapter;
 import com.google.gson.annotations.SerializedName;
 import com.google.gson.stream.JsonReader;
 import com.google.gson.stream.JsonWriter;
 
 import java.io.IOException;
+import java.util.Arrays;
 
 /**
  *
  * @author Michaili K
  */
+@JsonFormat(shape = JsonFormat.Shape.OBJECT)
 public enum RepeatMode
 {
-    @SerializedName("0")
     OFF(null, "Off"),
-    @SerializedName("1")
     ALL("\uD83D\uDD01", "All"), // üîÅ
-    @SerializedName("2")
     SINGLE("\uD83D\uDD02", "Single"); // üîÇ
 
     private final String emoji;
@@ -55,6 +55,14 @@
     }
 
 
+    public static RepeatMode getFromInt(int num){
+        switch ( num){
+            default: return OFF;
+            case 1: return ALL;
+            case 2: return SINGLE;
+        }
+    }
+
 }
 
 
Index: src/main/java/com/eme22/bolo/Listener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright 2016 John Grosh <john.a.grosh@gmail.com>.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npackage com.eme22.bolo;\r\n\r\nimport com.eme22.bolo.audio.AudioHandler;\r\nimport com.eme22.bolo.audio.QueuedTrack;\r\nimport com.eme22.bolo.audio.RequestMetadata;\r\nimport com.eme22.bolo.commands.music.LyricsCmd;\r\nimport com.eme22.bolo.settings.Settings;\r\nimport com.eme22.bolo.utils.OtherUtil;\r\nimport com.jagrosh.jdautilities.menu.Paginator;\r\nimport com.jagrosh.jlyrics.LyricsClient;\r\nimport com.sedmelluq.discord.lavaplayer.player.AudioPlayer;\r\nimport net.dv8tion.jda.api.MessageBuilder;\r\nimport net.dv8tion.jda.api.entities.*;\r\nimport net.dv8tion.jda.api.events.ReadyEvent;\r\nimport net.dv8tion.jda.api.events.ShutdownEvent;\r\nimport net.dv8tion.jda.api.events.guild.GuildJoinEvent;\r\nimport net.dv8tion.jda.api.events.guild.member.GuildMemberJoinEvent;\r\nimport net.dv8tion.jda.api.events.guild.member.GuildMemberRemoveEvent;\r\nimport net.dv8tion.jda.api.events.guild.voice.GuildVoiceLeaveEvent;\r\nimport net.dv8tion.jda.api.events.guild.voice.GuildVoiceUpdateEvent;\r\nimport net.dv8tion.jda.api.events.message.guild.GuildMessageDeleteEvent;\r\nimport net.dv8tion.jda.api.events.message.guild.GuildMessageEmbedEvent;\r\nimport net.dv8tion.jda.api.events.message.guild.GuildMessageReceivedEvent;\r\nimport net.dv8tion.jda.api.events.message.react.MessageReactionAddEvent;\r\nimport net.dv8tion.jda.api.events.message.react.MessageReactionRemoveEvent;\r\nimport net.dv8tion.jda.api.exceptions.PermissionException;\r\nimport net.dv8tion.jda.api.hooks.ListenerAdapter;\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport java.io.File;\r\nimport java.io.InputStream;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.concurrent.atomic.AtomicBoolean;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\nimport static com.eme22.bolo.commands.music.QueueCmd.getQueueTitle;\r\n\r\n/**\r\n *\r\n * @author John Grosh (john.a.grosh@gmail.com)\r\n */\r\n@SuppressWarnings(\"ConstantConditions\")\r\npublic class Listener extends ListenerAdapter\r\n{\r\n    private final Bot bot;\r\n    private final Paginator.Builder builder;\r\n\r\n    public Listener(Bot bot)\r\n    {\r\n        this.bot = bot;\r\n        this.builder = new Paginator.Builder()\r\n                .setColumns(1)\r\n                .setFinalAction(m -> {try{m.clearReactions().queue();}catch(PermissionException ignore){}})\r\n                .setItemsPerPage(10)\r\n                .waitOnSinglePage(false)\r\n                .useNumberedItems(true)\r\n                .showPageNumbers(true)\r\n                .wrapPageEnds(true)\r\n                .setEventWaiter(bot.getWaiter())\r\n                .setTimeout(1, TimeUnit.MINUTES);\r\n    }\r\n\r\n    private final HashMap<String, Integer> tempChannels = new HashMap<>();\r\n\r\n    private int tempvolume = -1;\r\n    \r\n    @Override\r\n    public void onReady(ReadyEvent event) \r\n    {\r\n        if(event.getJDA().getGuildCache().isEmpty())\r\n        {\r\n            Logger log = LoggerFactory.getLogger(\"MusicBot\");\r\n            log.warn(\"This bot is not on any guilds! Use the following link to add the bot to your guilds!\");\r\n            log.warn(event.getJDA().getInviteUrl(Bolo.RECOMMENDED_PERMS));\r\n        }\r\n        //credit(event.getJDA());\r\n        event.getJDA().getGuilds().forEach((guild) -> \r\n        {\r\n            try\r\n            {\r\n                String defpl = bot.getSettingsManager().getSettings(guild).getDefaultPlaylist();\r\n                VoiceChannel vc = bot.getSettingsManager().getSettings(guild).getVoiceChannel(guild);\r\n                if(defpl!=null && vc!=null && bot.getPlayerManager().setUpHandler(guild).playFromDefault())\r\n                {\r\n                    guild.getAudioManager().openAudioConnection(vc);\r\n                }\r\n            }\r\n            catch(Exception ignore) {}\r\n        });\r\n        if(bot.getConfig().useUpdateAlerts())\r\n        {\r\n            bot.getThreadpool().scheduleWithFixedDelay(() -> \r\n            {\r\n                try\r\n                {\r\n                    User owner = bot.getJDA().retrieveUserById(bot.getConfig().getOwnerId()).complete();\r\n                    String currentVersion = OtherUtil.getCurrentVersion();\r\n                    String latestVersion = OtherUtil.getLatestVersion();\r\n                    if(latestVersion!=null && !currentVersion.equalsIgnoreCase(latestVersion))\r\n                    {\r\n                        String msg = String.format(OtherUtil.NEW_VERSION_AVAILABLE, currentVersion, latestVersion);\r\n                        owner.openPrivateChannel().queue(pc -> pc.sendMessage(msg).queue());\r\n                    }\r\n                }\r\n                catch(Exception ignored) {} // ignored\r\n            }, 0, 24, TimeUnit.HOURS);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onGuildMessageEmbed(@NotNull GuildMessageEmbedEvent event) {\r\n        ArrayList<TextChannel> bannedTextChannels = bot.getSettingsManager().getSettings(event.getGuild()).getOnlyImageChannels(event.getGuild());\r\n\r\n        if (bannedTextChannels.contains(event.getChannel())) {\r\n            List<MessageEmbed> message = event.getMessageEmbeds();\r\n\r\n            AtomicBoolean deletable = new AtomicBoolean(true);\r\n\r\n\r\n            message.forEach( messageEmbed -> {\r\n                if (messageEmbed.getImage() != null || messageEmbed.getVideoInfo() != null)\r\n                    deletable.set(false);\r\n            });\r\n\r\n            if (deletable.get())\r\n                event.getChannel().deleteMessageById(event.getMessageId()).complete();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onGuildMessageReceived(@NotNull GuildMessageReceivedEvent event)\r\n    {\r\n       ArrayList<TextChannel> bannedTextChannels = bot.getSettingsManager().getSettings(event.getGuild()).getOnlyImageChannels(event.getGuild());\r\n\r\n        if (bannedTextChannels.contains(event.getChannel())) {\r\n            Message message = event.getMessage();\r\n\r\n            if(message.getContentRaw().contains(\"delimagechannel\"))\r\n                return;\r\n\r\n            if (message.getContentRaw().contains(\"https://\"))\r\n                return;\r\n\r\n            if (message.getAttachments().isEmpty())\r\n                message.delete().complete();\r\n\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onGuildMessageDelete(GuildMessageDeleteEvent event) \r\n    {\r\n        bot.getNowplayingHandler().onMessageDelete(event.getGuild(), event.getMessageIdLong());\r\n        bot.getPollManager().onGuildMessageDelete(event);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onGuildVoiceUpdate(@NotNull GuildVoiceUpdateEvent event)\r\n    {\r\n        bot.getAloneInVoiceHandler().onVoiceUpdate(event);\r\n    }\r\n\r\n    @Override\r\n    public void onGuildVoiceLeave(@NotNull GuildVoiceLeaveEvent event)\r\n    {\r\n        if (event.getMember().getUser().getIdLong() != event.getJDA().getSelfUser().getIdLong())\r\n            return;\r\n\r\n        Guild guild = event.getGuild();\r\n        ((AudioHandler) guild.getAudioManager().getSendingHandler()).stopAndClear();\r\n        guild.getAudioManager().closeAudioConnection();\r\n    }\r\n\r\n    @Override\r\n    public void onShutdown(@NotNull ShutdownEvent event)\r\n    {\r\n        bot.shutdown();\r\n    }\r\n\r\n    @Override\r\n    public void onGuildJoin(GuildJoinEvent event) \r\n    {\r\n        Guild guild = event.getGuild();\r\n        try\r\n            {\r\n                TextChannel commandsChannel = bot.getSettingsManager().getSettings(guild).getTextChannel(guild);\r\n                TextChannel bienvenidasChannel = bot.getSettingsManager().getSettings(guild).getHelloChannel(guild);\r\n                TextChannel despedidasChannel = bot.getSettingsManager().getSettings(guild).getGoodbyeChannel(guild);\r\n                TextChannel defaultChannel = guild.getDefaultChannel();\r\n                List<TextChannel> channels = guild.getTextChannels();\r\n\r\n                if (commandsChannel == null){\r\n                    setupChannel(\"Comandos de Musica\",defaultChannel, channels, 0);\r\n                }\r\n                if (bienvenidasChannel == null){\r\n                    setupChannel(\"Bienvenidas\", defaultChannel, channels, 1);\r\n                }\r\n                if (despedidasChannel == null){\r\n                    setupChannel(\"Despedidas\", defaultChannel, channels, 2);\r\n                }\r\n            }\r\n        catch(Exception exception) {\r\n            Logger log = LoggerFactory.getLogger(\"MusicBot\");\r\n            log.error(\"Error: \"+ exception.getMessage(), exception);\r\n        }\r\n\r\n    }\r\n\r\n    private void setupChannel(String title, TextChannel defaultChannel, List<TextChannel> channels, int channel) {\r\n        ArrayList<Message> pages = new ArrayList<>();\r\n        int calculatedPages = (int) Math.ceil( (double) channels.size() / 10);\r\n        MessageBuilder mb = new MessageBuilder();\r\n        for (int i = 1; i <= calculatedPages; i++) {\r\n            StringBuilder sb = new StringBuilder();\r\n            sb.append(\"Seleccione el canal para \").append(title).append(\": \\n\");\r\n            for (int j = (i - 1) * 10; j < Math.min(i * 10, channels.size()); j++) {\r\n                sb.append(OtherUtil.numtoString(j)).append(\" \").append(channels.get(j).getName()).append(\"\\n\");\r\n            }\r\n            mb.setContent(sb.toString());\r\n            pages.add(mb.build());\r\n        }\r\n\r\n\r\n        pages.forEach( page -> defaultChannel.sendMessage(page).queue(success -> {\r\n\r\n            tempChannels.put(success.getId(), channel);\r\n            for (int i = 0; i < getMessageItems(page); i++) {\r\n                success.addReaction(\"U+003\"+i+\" U+FE0F U+20E3\").queue();\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n    private int getMessageItems(Message message) {\r\n        String[] chans = message.getContentRaw().split(\"\\n\");\r\n        chans = Arrays.copyOfRange(chans, 1, chans.length);\r\n        return chans.length;\r\n    }\r\n\r\n    @Override\r\n    public void onMessageReactionAdd(@NotNull MessageReactionAddEvent event) {\r\n        if (event.getUser().isBot())\r\n            return;\r\n\r\n        bot.getPollManager().onGuildMessageReactionAdd(event);\r\n\r\n        if (tempChannels.containsKey(event.getMessageId())){\r\n\r\n            String reaction = event.getReactionEmote().getName();\r\n            int channel = Integer.parseInt(reaction.replaceAll(\"[^\\\\d.]\", \"\"));\r\n            TextChannel channelId = getChannelFromMessage(channel, event.retrieveMessage().complete());\r\n            if (channelId != null) {\r\n\r\n                int mode = tempChannels.get(event.getMessageId());\r\n                if (mode == 0){\r\n                    for (String key : getKeys(tempChannels, 0)) {\r\n\r\n                        Message msgToDelete = event.getTextChannel().retrieveMessageById(key).complete();\r\n                        msgToDelete.delete().complete();\r\n\r\n                    }\r\n                    bot.getSettingsManager().getSettings(event.getGuild()).setTextChannel(channelId);\r\n                }\r\n                if (mode == 1){\r\n                    for (String key : getKeys(tempChannels, 1)) {\r\n\r\n                        Message msgToDelete = event.getTextChannel().retrieveMessageById(key).complete();\r\n                        msgToDelete.delete().complete();\r\n\r\n                    }\r\n                    bot.getSettingsManager().getSettings(event.getGuild()).setHelloID(channelId);\r\n                }\r\n                if (mode == 2){\r\n                    for (String key : getKeys(tempChannels, 2)) {\r\n\r\n                        Message msgToDelete = event.getTextChannel().retrieveMessageById(key).complete();\r\n                        msgToDelete.delete().complete();\r\n\r\n                    }\r\n                    bot.getSettingsManager().getSettings(event.getGuild()).setGoodByeID(channelId);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        try {\r\n\r\n            if(event.getMessageIdLong() == bot.getNowplayingHandler().getLastNP(event.getGuild()).getValue()) {\r\n                String reaction = event.getReactionEmote().getAsReactionCode();\r\n\r\n                if (reaction.equals(\"\\uD83D\\uDD07\")) {\r\n                    AudioPlayer player = ((AudioHandler) event.getGuild().getAudioManager().getSendingHandler()).getPlayer();\r\n\r\n                    int volume = player.getVolume();\r\n\r\n                    if (volume == 0) {\r\n                        ((AudioHandler) event.getGuild().getAudioManager().getSendingHandler()).getPlayer().setVolume(tempvolume != 0 ? tempvolume : 50);\r\n                    } else {\r\n                        tempvolume = player.getVolume();\r\n                        ((AudioHandler) event.getGuild().getAudioManager().getSendingHandler()).getPlayer().setVolume(0);\r\n                    }\r\n\r\n                    event.getReaction().removeReaction(event.getUser()).complete();\r\n\r\n                }\r\n                if (reaction.equals(\"‚è≠\")) {\r\n                    AudioHandler handler = ((AudioHandler) event.getGuild().getAudioManager().getSendingHandler());\r\n                    RequestMetadata rm = handler.getRequestMetadata();\r\n                    event.getTextChannel().sendMessage(bot.getConfig().getSuccess()+\" Skipped **\"+handler.getPlayer().getPlayingTrack().getInfo().title\r\n                            +\"** \"+(rm.getOwner() == 0L ? \"(autoplay)\" : \"(requested by **\" + rm.user.username + \"**)\")).complete();\r\n                    handler.getPlayer().stopTrack();\r\n                    event.getReaction().removeReaction(event.getUser()).complete();\r\n                }\r\n\r\n                if (reaction.equals(\"‚èØ\")) {\r\n\r\n                    AudioHandler handler = (AudioHandler)event.getGuild().getAudioManager().getSendingHandler();\r\n                    handler.getPlayer().setPaused(!handler.getPlayer().isPaused());\r\n                    event.getReaction().removeReaction(event.getUser()).complete();\r\n                }\r\n\r\n                if (reaction.equals(\"\\uD83C\\uDFB5\")){\r\n                    AudioHandler handler = (AudioHandler)event.getGuild().getAudioManager().getSendingHandler();\r\n                    String title = handler.getPlayer().getPlayingTrack().getInfo().title;\r\n                    if(title == null)\r\n                    {\r\n                        AudioHandler sendingHandler = (AudioHandler) event.getGuild().getAudioManager().getSendingHandler();\r\n                        if (sendingHandler.isMusicPlaying(event.getJDA()))\r\n                            title = sendingHandler.getPlayer().getPlayingTrack().getInfo().title;\r\n                        else\r\n                        {\r\n                            event.getTextChannel().sendMessage (\"There must be music playing to use that!\").complete();\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    event.getChannel().sendTyping().queue();\r\n                    String finalTitle = formatTitle(title);\r\n                    new LyricsClient().getLyrics(title).thenAccept(lyrics ->\r\n                    {\r\n                        if(lyrics == null)\r\n                            event.getTextChannel().sendMessage(\"Lyrics for `\" + finalTitle + \"` could not be found!\" + (finalTitle.isEmpty() ? \" Try entering the song name manually (`lyrics [song name]`)\" : \"\")).queue();\r\n                        else\r\n                            LyricsCmd.showLyrics(null, event.getGuild().getSelfMember().getColor(), event.getTextChannel(),finalTitle, lyrics);\r\n                    });\r\n                    event.getReaction().removeReaction(event.getUser()).queue();\r\n                }\r\n\r\n                if (reaction.equals(\"\\uD83D\\uDCC3\"))\r\n                {\r\n                    int pagenum = 1;\r\n                    AudioHandler ah = (AudioHandler)event.getGuild().getAudioManager().getSendingHandler();\r\n                    List<QueuedTrack> list = ah.getQueue().getList();\r\n                    if(list.isEmpty())\r\n                    {\r\n                        Message built = new MessageBuilder()\r\n                                .setContent(bot.getConfig().getWarning() + \" There is no music in the queue!\")\r\n                                .build();\r\n\r\n                        event.getTextChannel().sendMessage(built).queue(m ->\r\n                                m.delete().queueAfter(5, TimeUnit.SECONDS));\r\n                        return;\r\n                    }\r\n                    String[] songs = new String[list.size()];\r\n                    long total = 0;\r\n                    for(int i=0; i<list.size(); i++)\r\n                    {\r\n                        total += list.get(i).getTrack().getDuration();\r\n                        songs[i] = list.get(i).toString();\r\n                    }\r\n                    Settings settings = bot.getSettingsManager().getSettings(event.getGuild());\r\n                    long fintotal = total;\r\n                    builder.setText((i1,i2) -> getQueueTitle(ah, bot.getConfig().getSuccess(), songs.length, fintotal, settings.getRepeatMode()))\r\n                            .setItems(songs)\r\n                    ;\r\n                    builder.build().paginate(event.getChannel(), pagenum);\r\n                    event.getReaction().removeReaction(event.getUser()).queue();\r\n                }\r\n\r\n            }\r\n        }\r\n        catch (NullPointerException ignore){}\r\n    }\r\n\r\n    @Override\r\n    public void onMessageReactionRemove(@NotNull MessageReactionRemoveEvent event) {\r\n        bot.getPollManager().onGuildMessageReactionRemove(event);\r\n    }\r\n\r\n    private String formatTitle(String title) {\r\n        Pattern pattern = Pattern.compile(\"((?:(?!(?:[\\\\)\\\\]\\\\/\\\\/])).)*\\\\s-\\\\s(?:(?!(?: [\\\\(\\\\[\\\\/\\\\\\\\])).)*)\", Pattern.CASE_INSENSITIVE);\r\n        Matcher matcher = pattern.matcher(title);\r\n        boolean matchFound = matcher.find();\r\n        if(matchFound) {\r\n            return matcher.group(1);\r\n        } else {\r\n            System.out.println(\"Match not found\");\r\n            return title;\r\n        }\r\n\r\n    }\r\n\r\n    private TextChannel getChannelFromMessage(int channel, Message message) {\r\n        String[] chans = message.getContentRaw().split(\"\\n\");\r\n        chans = Arrays.copyOfRange(chans, 1, chans.length);\r\n\r\n        if (channel > chans.length)\r\n            return null;\r\n\r\n        String channam = chans[channel].split(\":\")[2].substring(1);\r\n\r\n        return message.getGuild().getTextChannelsByName(channam, true).get(0);\r\n    }\r\n\r\n    private static Set<String> getKeys(Map<String, Integer> map, Integer value) {\r\n\r\n        Set<String> result = new HashSet<>();\r\n        if (map.containsValue(value)) {\r\n            for (Map.Entry<String, Integer> entry : map.entrySet()) {\r\n                if (Objects.equals(entry.getValue(), value)) {\r\n                    result.add(entry.getKey());\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onGuildMemberJoin(@NotNull GuildMemberJoinEvent event) {\r\n        Guild guild = event.getGuild();\r\n        User member = event.getMember().getUser();\r\n            try\r\n            {\r\n                TextChannel bienvenidas = bot.getSettingsManager().getSettings(guild).getHelloChannel(guild);\r\n\r\n                if(bienvenidas != null)\r\n                {\r\n                    InputStream bienvenida = OtherUtil.getBackground(bot.getSettingsManager().getSettings(guild), true);\r\n                    String userImage = member.getAvatarUrl();\r\n                    if (userImage == null)\r\n                        userImage = member.getDefaultAvatarUrl();\r\n                    else\r\n                        userImage = member.getAvatarUrl();\r\n\r\n                    File parent = new File(\"temp\");\r\n                    if(!parent.exists()) {\r\n                        parent.mkdirs();\r\n                    }\r\n\r\n                    File converted = new File(parent, member.getId()+\".png\");\r\n                    if (converted.exists())\r\n                        converted.delete();\r\n\r\n                    OtherUtil.createImage( \"BIENVENIDO\", member.getName(), member.getId(), bienvenida, userImage);\r\n                    if (!converted.exists()){\r\n                        Logger log = LoggerFactory.getLogger(\"MusicBot\");\r\n                        log.error(\"Image not created\");\r\n                    }\r\n\r\n\r\n                    //builder.setThumbnail(\"attachment://bienvenida.png\");\r\n                    bienvenidas.sendMessage(\"En que andas \" + member.getAsMention() + \"te damos la bienvenida a \" + guild.getName() + \" , Discord creado por el pueblo y para el pueblo.\\nPARA INGRESAR A LOS OTROS CANALES, POR FAVOR LEE LAS \" + guild.getTextChannelById(\"869307625169367130\").getAsMention() + \" Y VERIF√çCATE.\").addFile(converted).complete();\r\n                    converted.delete();\r\n                }\r\n            }\r\n            catch(Exception exception) {\r\n                Logger log = LoggerFactory.getLogger(\"MusicBot\");\r\n                log.error(\"Error: \"+ exception.getMessage(), exception);\r\n            }\r\n    }\r\n\r\n    @Override\r\n    public void onGuildMemberRemove(@NotNull GuildMemberRemoveEvent event) {\r\n        Guild guild = event.getGuild();\r\n        User member = event.getMember().getUser();\r\n\r\n            try\r\n            {\r\n                TextChannel despedidas = bot.getSettingsManager().getSettings(guild).getGoodbyeChannel(guild);\r\n                if(despedidas!=null)\r\n                {\r\n                    InputStream despedida = OtherUtil.getBackground(bot.getSettingsManager().getSettings(guild), false);\r\n\r\n                    String userImage = member.getAvatarUrl();\r\n                    if (userImage == null)\r\n                        userImage = member.getDefaultAvatarUrl();\r\n                    else\r\n                        userImage = member.getAvatarUrl();\r\n\r\n                    File parent = new File(\"temp\");\r\n                    if(!parent.exists()) {\r\n                        parent.mkdirs();\r\n                    }\r\n\r\n                    File converted = new File(parent, member.getId()+\".png\");\r\n                    if (converted.exists())\r\n                        converted.delete();\r\n\r\n                    OtherUtil.createImage( \"SE VA\", member.getName(), String.valueOf(member.getId()), despedida, userImage);\r\n                    if (!converted.exists()){\r\n                        Logger log = LoggerFactory.getLogger(\"MusicBot\");\r\n                        log.error(\"Image not created\");\r\n                    }\r\n\r\n\r\n                    //builder.setThumbnail(\"attachment://bienvenida.png\");\r\n                    despedidas.sendMessage(\"Se ha escapado de nuestras manos\").addFile(converted).complete();\r\n                    converted.delete();\r\n\r\n                }\r\n            }\r\n            catch(Exception exception) {\r\n                Logger log = LoggerFactory.getLogger(\"MusicBot\");\r\n                log.error(\"Error: \"+ exception.getMessage(), exception);\r\n            }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/eme22/bolo/Listener.java b/src/main/java/com/eme22/bolo/Listener.java
--- a/src/main/java/com/eme22/bolo/Listener.java	(revision e59a9e33c37365adb08ea3a1aa6fcbe3d980854e)
+++ b/src/main/java/com/eme22/bolo/Listener.java	(date 1646250702463)
@@ -19,7 +19,7 @@
 import com.eme22.bolo.audio.QueuedTrack;
 import com.eme22.bolo.audio.RequestMetadata;
 import com.eme22.bolo.commands.music.LyricsCmd;
-import com.eme22.bolo.settings.Settings;
+import com.eme22.bolo.entities.Settings;
 import com.eme22.bolo.utils.OtherUtil;
 import com.jagrosh.jdautilities.menu.Paginator;
 import com.jagrosh.jlyrics.LyricsClient;
@@ -279,7 +279,7 @@
                         msgToDelete.delete().complete();
 
                     }
-                    bot.getSettingsManager().getSettings(event.getGuild()).setTextChannel(channelId);
+                    bot.getSettingsManager().getSettings(event.getGuild()).setTextChannelId(channelId);
                 }
                 if (mode == 1){
                     for (String key : getKeys(tempChannels, 1)) {
@@ -288,7 +288,7 @@
                         msgToDelete.delete().complete();
 
                     }
-                    bot.getSettingsManager().getSettings(event.getGuild()).setHelloID(channelId);
+                    bot.getSettingsManager().getSettings(event.getGuild()).setBienvenidasChannelId(channelId);
                 }
                 if (mode == 2){
                     for (String key : getKeys(tempChannels, 2)) {
@@ -297,7 +297,7 @@
                         msgToDelete.delete().complete();
 
                     }
-                    bot.getSettingsManager().getSettings(event.getGuild()).setGoodByeID(channelId);
+                    bot.getSettingsManager().getSettings(event.getGuild()).setDespedidasChannelId(channelId);
                 }
             }
 
Index: src/main/java/com/eme22/bolo/utils/OtherUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright 2018 John Grosh <john.a.grosh@gmail.com>.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npackage com.eme22.bolo.utils;\r\n\r\nimport com.eme22.bolo.Bolo;\r\nimport com.eme22.bolo.entities.Pair;\r\nimport com.eme22.bolo.entities.Poll;\r\nimport com.eme22.bolo.entities.Prompt;\r\nimport com.eme22.bolo.settings.Settings;\r\nimport net.dv8tion.jda.api.OnlineStatus;\r\nimport net.dv8tion.jda.api.entities.Activity;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\nimport okhttp3.ResponseBody;\r\nimport org.apache.commons.validator.routines.UrlValidator;\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.json.JSONTokener;\r\nimport org.kohsuke.github.*;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport javax.imageio.IIOException;\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.*;\r\nimport java.awt.geom.Ellipse2D;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.*;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URISyntaxException;\r\nimport java.net.URL;\r\nimport java.net.URLConnection;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.nio.file.StandardCopyOption;\r\nimport java.security.MessageDigest;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.text.DecimalFormat;\r\nimport java.time.LocalDateTime;\r\nimport java.util.*;\r\nimport java.util.List;\r\nimport java.util.concurrent.atomic.AtomicReference;\r\nimport java.util.stream.IntStream;\r\n\r\n/**\r\n *\r\n * @author John Grosh <john.a.grosh@gmail.com>\r\n */\r\n@SuppressWarnings(\"unused\")\r\npublic class OtherUtil\r\n{\r\n    public final static String NEW_VERSION_AVAILABLE = \"There is a new version of JMusicBot available!\\n\"\r\n                    + \"Current version: %s\\n\"\r\n                    + \"New Version: %s\\n\\n\"\r\n                    + \"Please visit https://github.com/jagrosh/MusicBot/releases/latest to get the latest release.\";\r\n    private final static String WINDOWS_INVALID_PATH = \"c:\\\\windows\\\\system32\\\\\";\r\n\r\n    private static final List<String> SHA = new ArrayList<>();\r\n\r\n    /**\r\n     * gets a Path from a String\r\n     * also fixes the windows tendency to try to start in system32\r\n     * any time the bot tries to access this path, it will instead start in the location of the jar file\r\n     * \r\n     * @param path the string path\r\n     * @return the Path object\r\n     */\r\n    public static Path getPath(String path)\r\n    {\r\n        Path result = Paths.get(path);\r\n        // special logic to prevent trying to access system32\r\n        if(result.toAbsolutePath().toString().toLowerCase().startsWith(WINDOWS_INVALID_PATH))\r\n        {\r\n            try\r\n            {\r\n                result = Paths.get(new File(Bolo.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getParentFile().getPath() + File.separator + path);\r\n            }\r\n            catch(URISyntaxException ignored) {}\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    /**\r\n     * Loads a resource from the jar as a string\r\n     * \r\n     * @param clazz class base object\r\n     * @param name name of resource\r\n     * @return string containing the contents of the resource\r\n     */\r\n    public static String loadResource(Object clazz, String name)\r\n    {\r\n        try(BufferedReader reader = new BufferedReader(new InputStreamReader(Objects.requireNonNull(clazz.getClass().getResourceAsStream(name)))))\r\n        {\r\n            StringBuilder sb = new StringBuilder();\r\n            reader.lines().forEach(line -> sb.append(\"\\r\\n\").append(line));\r\n            return sb.toString().trim();\r\n        }\r\n        catch(IOException ex)\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Loads image data from a URL\r\n     * \r\n     * @param url url of image\r\n     * @return inputstream of url\r\n     */\r\n    public static InputStream imageFromUrl(String url)\r\n    {\r\n        if(url==null)\r\n            return null;\r\n        try\r\n        {\r\n            URL u = new URL(url);\r\n            URLConnection urlConnection = u.openConnection();\r\n            urlConnection.setRequestProperty(\"user-agent\", \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36\");\r\n            return urlConnection.getInputStream();\r\n        }\r\n        catch(IOException | IllegalArgumentException ignore) {}\r\n        return null;\r\n    }\r\n    \r\n    /**\r\n     * Parses an activity from a string\r\n     * \r\n     * @param game the game, including the action such as 'playing' or 'watching'\r\n     * @return the parsed activity\r\n     */\r\n    public static Activity parseGame(String game)\r\n    {\r\n        if(game==null || game.trim().isEmpty() || game.trim().equalsIgnoreCase(\"default\"))\r\n            return null;\r\n        String lower = game.toLowerCase();\r\n        if(lower.startsWith(\"playing\"))\r\n            return Activity.playing(makeNonEmpty(game.substring(7).trim()));\r\n        if(lower.startsWith(\"listening to\"))\r\n            return Activity.listening(makeNonEmpty(game.substring(12).trim()));\r\n        if(lower.startsWith(\"listening\"))\r\n            return Activity.listening(makeNonEmpty(game.substring(9).trim()));\r\n        if(lower.startsWith(\"watching\"))\r\n            return Activity.watching(makeNonEmpty(game.substring(8).trim()));\r\n        if(lower.startsWith(\"streaming\"))\r\n        {\r\n            String[] parts = game.substring(9).trim().split(\"\\\\s+\", 2);\r\n            if(parts.length == 2)\r\n            {\r\n                return Activity.streaming(makeNonEmpty(parts[1]), \"https://twitch.tv/\"+parts[0]);\r\n            }\r\n        }\r\n        return Activity.playing(game);\r\n    }\r\n   \r\n    public static String makeNonEmpty(String str)\r\n    {\r\n        return str == null || str.isEmpty() ? \"\\u200B\" : str;\r\n    }\r\n    \r\n    public static OnlineStatus parseStatus(String status)\r\n    {\r\n        if(status==null || status.trim().isEmpty())\r\n            return OnlineStatus.ONLINE;\r\n        OnlineStatus st = OnlineStatus.fromKey(status);\r\n        return st == null ? OnlineStatus.ONLINE : st;\r\n    }\r\n    \r\n    public static String checkVersion(Prompt prompt)\r\n    {\r\n        // Get current version number\r\n        String version = getCurrentVersion();\r\n        \r\n        // Check for new version\r\n        String latestVersion = getLatestVersion();\r\n        \r\n        if(latestVersion!=null && !latestVersion.equals(version))\r\n        {\r\n            prompt.alert(Prompt.Level.WARNING, \"Version\", String.format(NEW_VERSION_AVAILABLE, version, latestVersion));\r\n        }\r\n        \r\n        // Return the current version\r\n        return version;\r\n    }\r\n    \r\n    public static String getCurrentVersion()\r\n    {\r\n        if(Bolo.class.getPackage()!=null && Bolo.class.getPackage().getImplementationVersion()!=null)\r\n            return Bolo.class.getPackage().getImplementationVersion();\r\n        else\r\n            return \"UNKNOWN\";\r\n    }\r\n    \r\n    public static String getLatestVersion()\r\n    {\r\n        try\r\n        {\r\n            Response response = new OkHttpClient.Builder().build()\r\n                    .newCall(new Request.Builder().get().url(\"https://api.github.com/repos/jagrosh/MusicBot/releases/latest\").build())\r\n                    .execute();\r\n            ResponseBody body = response.body();\r\n            if(body != null)\r\n            {\r\n                try(Reader reader = body.charStream())\r\n                {\r\n                    JSONObject obj = new JSONObject(new JSONTokener(reader));\r\n                    return obj.getString(\"tag_name\");\r\n                }\r\n                finally\r\n                {\r\n                    response.close();\r\n                }\r\n            }\r\n            else\r\n                return null;\r\n        }\r\n        catch(IOException | JSONException | NullPointerException ex)\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static String makePollString(Poll poll){\r\n        StringBuilder sb = new StringBuilder();\r\n        DecimalFormat df = new DecimalFormat(\"#.##\");\r\n\r\n        sb.append(\"*\").append(poll.getQuestion()).append(\"*\").append(\"\\n\").append(\"\\n\");\r\n\r\n        ArrayList<Poll.Answers> answers = poll.getAnswers();\r\n\r\n        AtomicReference<Integer> votes = new AtomicReference<>(0);\r\n        answers.forEach( answers1 -> votes.updateAndGet(v -> v + answers1.getCount()));\r\n\r\n        IntStream.range(0, answers.size())\r\n                .forEach(index -> {\r\n                    Poll.Answers answers1 = answers.get(index);\r\n                    sb.append(OtherUtil.numtoString(index)).append(\": \").append(answers1.getAnswer()).append(\"\\n\");\r\n                    double perc;\r\n                    float count = answers1.getCount();\r\n                    if (Math.abs(votes.get()) < 0.0001)\r\n                        perc = 0;\r\n                    else\r\n                        perc = count /votes.get()*100;\r\n                    int perc2 = (int) (perc/100*20);\r\n                    sb.append(\"[ \").append(percentajetoDraw(perc2));\r\n                    sb.append(\" | \").append(df.format(perc)).append(\"% (\").append(count).append(\")]\");\r\n                    sb.append(\"\\n\");\r\n                });\r\n\r\n        return sb.toString();\r\n    }\r\n\r\n    public static String numtoString(int num){\r\n        num = num % 10;\r\n        switch (num) {\r\n            default: return \"\";\r\n            case 0: return \":zero:\";\r\n            case 1: return \":one:\";\r\n            case 2: return \":two:\";\r\n            case 3: return \":three:\";\r\n            case 4: return \":four:\";\r\n            case 5: return \":five:\";\r\n            case 6: return \":six:\";\r\n            case 7: return \":seven:\";\r\n            case 8: return \":eight:\";\r\n            case 9: return \":nine:\";\r\n        }\r\n    }\r\n\r\n    public static String percentajetoDraw(int num){\r\n\r\n        switch (num) {\r\n            default: return \"\";\r\n            case 0: return  \"‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 1: return  \"‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 2: return  \"‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 3: return  \"‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 4: return  \"‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 5: return  \"‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 6: return  \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 7: return  \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 8: return  \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 9: return  \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 10: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 11: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 12: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 13: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 14: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 15: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 16: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä‚†Ä\";\r\n            case 17: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä‚†Ä\";\r\n            case 18: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä‚†Ä\";\r\n            case 19: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚†Ä\";\r\n            case 20: return \"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà\";\r\n        }\r\n    }\r\n\r\n    public static void createImage(String message, String name, String id, InputStream background, String userImage) throws IOException {\r\n\r\n        try {\r\n            int width = 1000, height = 500;\r\n\r\n            BufferedImage userPic = null;\r\n            try {\r\n                InputStream userPicStream = imageFromUrl(userImage);\r\n                userPic = ImageIO.read(userPicStream);\r\n                userPicStream.close();\r\n            } catch (IIOException e) {\r\n                Logger log = LoggerFactory.getLogger(\"MusicBot\");\r\n                log.error(\"Exception\", e);\r\n            }\r\n\r\n            if (userPic != null)\r\n                userPic = createAvatar(userPic);\r\n\r\n\r\n            BufferedImage background2 = ImageIO.read(background);\r\n\r\n            BufferedImage bi = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);\r\n            Graphics2D ig2 = bi.createGraphics();\r\n\r\n            ig2.drawImage(background2, 0,0, width, height, null );\r\n            if (userPic != null)\r\n                ig2.drawImage(userPic, 370, 25, null);\r\n\r\n            InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"trans.ttf\");\r\n\r\n            @SuppressWarnings(\"ConstantConditions\")\r\n            Font font2 = Font.createFont(Font.TRUETYPE_FONT, is).deriveFont(90f);\r\n            Font font1 = font2.deriveFont(70f);\r\n            ig2.setFont(font1);\r\n            drawOutlinedAndCenteredString(message, width, height, ig2, 370);\r\n            ig2.setFont(font2);\r\n            ig2.setPaint(Color.white);\r\n            drawOutlinedAndCenteredString(name, width, height, ig2, 470);\r\n            ig2.dispose();\r\n\r\n            File parent = new File(\"temp\");\r\n            if(!parent.exists()) {\r\n                boolean dircreated = parent.mkdirs();\r\n            }\r\n            ImageIO.write(bi, \"png\", new File(\"temp\",id+\".png\"));\r\n\r\n        } catch (FontFormatException ie) {\r\n            ie.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private static void drawOutlinedAndCenteredString(String s, int w, int h, @NotNull Graphics2D g, int fh) {\r\n        FontMetrics fm = g.getFontMetrics();\r\n        int x = (w - fm.stringWidth(s)) / 2;\r\n        int y = (fm.getAscent() + (h - (fm.getAscent() + fm.getDescent())) / 2);\r\n        y = fh == 0 ? y: fh;\r\n        g.setColor(Color.black);\r\n        g.drawString(s, x + 10, y);\r\n        g.drawString(s, x - 10, y);\r\n        g.drawString(s, x,y + 10);\r\n        g.drawString(s, x, y - 10);\r\n        g.setColor(Color.white);\r\n        g.drawString(s, x, fh == 0 ? y: fh);\r\n\r\n    }\r\n\r\n    private static void drawCenteredString(String s, int w, int h, Graphics2D g, int fw, int fh, Color color) {\r\n        FontMetrics fm = g.getFontMetrics();\r\n        int x = (w - fm.stringWidth(s)) / 2;\r\n        int y = (fm.getAscent() + (h - (fm.getAscent() + fm.getDescent())) / 2);\r\n        g.setColor(color);\r\n        g.drawString(s, fw == 0 ? x: fw, fh == 0 ? y: fh);\r\n    }\r\n\r\n\r\n    private static BufferedImage createAvatar(BufferedImage image) {\r\n        int w = image.getWidth();\r\n        int h = image.getHeight();\r\n        BufferedImage output = new BufferedImage(w + 10, h + 10, BufferedImage.TYPE_INT_ARGB);\r\n\r\n        Graphics2D g2 = output.createGraphics();\r\n\r\n        // This is what we want, but it only does hard-clipping, i.e. aliasing\r\n        // g2.setClip(new RoundRectangle2D ...)\r\n\r\n        // so instead fake soft-clipping by first drawing the desired clip shape\r\n        // in fully opaque white with antialiasing enabled...\r\n        g2.setComposite(AlphaComposite.Src);\r\n        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\r\n        g2.setColor(Color.WHITE);\r\n        //g2.fill(new RoundRectangle2D.Float(0, 0, w, h, 180, 180));\r\n        g2.fill(new Ellipse2D.Float(0, 0, w, h));\r\n\r\n        // ... then compositing the image on top,\r\n        // using the white shape from above as alpha source\r\n        g2.setComposite(AlphaComposite.SrcAtop);\r\n        g2.drawImage(image, 0, 0, null);\r\n        g2.setColor(Color.WHITE);\r\n        g2.setStroke(new BasicStroke(10));\r\n        g2.drawOval(0, 0, w , h);\r\n        g2.dispose();\r\n\r\n        Image tmp = output.getScaledInstance(300, 300, Image.SCALE_SMOOTH);\r\n        output = new BufferedImage(300, 300, BufferedImage.TYPE_INT_ARGB);\r\n\r\n        g2 = output.createGraphics();\r\n        g2.drawImage(tmp, 0, 0, null);\r\n        g2.dispose();\r\n\r\n\r\n        return output;\r\n    }\r\n\r\n    public static void loadFileFromGit(File file) throws IOException, NoSuchAlgorithmException {\r\n\r\n        GitHub github = new GitHubBuilder().withOAuthToken(System.getenv(\"GITHUB_OAUTH\")).build();\r\n        GHRepository repo = github.getRepository(\"eme22/PGMUSICBOTSETTINGS\");\r\n\r\n        Files.copy(repo.getTree(\"main\").getEntry(file.getPath()).readAsBlob(), file.toPath(), StandardCopyOption.REPLACE_EXISTING);\r\n\r\n        MessageDigest md5Digest = MessageDigest.getInstance(\"SHA-256\");\r\n        SHA.add(getFileChecksum(md5Digest, file));\r\n\r\n    }\r\n\r\n    public static void writeFileToGitHub(File file) throws IOException, NoSuchAlgorithmException {\r\n       MessageDigest md5Digest = MessageDigest.getInstance(\"SHA-256\");\r\n        String checksum = getFileChecksum(md5Digest, file);\r\n\r\n        if (SHA.contains(checksum))\r\n            return;\r\n\r\n        GitHub github = new GitHubBuilder().withOAuthToken(System.getenv(\"GITHUB_OAUTH\")).build();\r\n        GHRepository repo = github.getRepository(\"eme22/PGMUSICBOTSETTINGS\");\r\n        GHRef masterRef = repo.getRef(\"heads/main\");\r\n        String masterTreeSha = repo.getTree(\"main\").getSha();\r\n\r\n        GHCommit commit = repo.createContent()\r\n                .content(Files.readAllBytes(file.toPath()))\r\n                .message(LocalDateTime.now() + \" Settings\")\r\n                .path(file.getName())\r\n                .sha(repo.getFileContent(file.getName()).getSha())\r\n                .commit()\r\n                .getCommit();\r\n\r\n        masterRef.updateTo(commit.getSHA1());\r\n\r\n        //String masterTreeSha = repo.getTree(\"main\").getSha();\r\n        //String treeSha = repo.createContent()\r\n        //        .add(file.getName(), Files.readAllBytes(file.toPath()), true)\r\n        //        .create().getSha();\r\n\r\n        //GHCommit commit = repo.createCommit()\r\n        //        .parent(masterTreeSha)\r\n        //        .tree(treeSha)\r\n        //        .message(LocalDateTime.now() + \" Settings\").create();\r\n\r\n        //masterRef.updateTo(commit.getSHA1());\r\n    }\r\n\r\n    private static String getFileChecksum(MessageDigest digest, File file) throws IOException\r\n    {\r\n        //Get file input stream for reading the file content\r\n        FileInputStream fis = new FileInputStream(file);\r\n\r\n        //Create byte array to read data in chunks\r\n        byte[] byteArray = new byte[1024];\r\n        int bytesCount;\r\n\r\n        //Read file data and update in message digest\r\n        while ((bytesCount = fis.read(byteArray)) != -1) {\r\n            digest.update(byteArray, 0, bytesCount);\r\n        }\r\n\r\n        //close the stream; We don't need it now.\r\n        fis.close();\r\n\r\n        //Get the hash's bytes\r\n        byte[] bytes = digest.digest();\r\n\r\n        //This bytes[] has bytes in decimal format;\r\n        //Convert it to hexadecimal format\r\n        StringBuilder sb = new StringBuilder();\r\n        for (byte aByte : bytes) {\r\n            sb.append(Integer.toString((aByte & 0xff) + 0x100, 16).substring(1));\r\n        }\r\n\r\n        //return complete hash\r\n        return sb.toString();\r\n    }\r\n\r\n    public static boolean hasValue(JSONArray json, String value) {\r\n        for(int i = 0; i < json.length(); i++) {  // iterate through the JsonArray\r\n            // first I get the 'i' JsonElement as a JsonObject, then I get the key as a string and I compare it with the value\r\n            if(json.get(i).equals(value)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static boolean hasValue(JSONArray json, Integer value) {\r\n        for(int i = 0; i < json.length(); i++) {  // iterate through the JsonArray\r\n            // first I get the 'i' JsonElement as a JsonObject, then I get the key as a string and I compare it with the value\r\n            if(json.get(i).equals(value)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static boolean hasValue(JSONArray json, Long value) {\r\n        for(int i = 0; i < json.length(); i++) {  // iterate through the JsonArray\r\n            // first I get the 'i' JsonElement as a JsonObject, then I get the key as a string and I compare it with the value\r\n            if(json.get(i).equals(value)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static boolean hasValue(JSONArray json, Map<String,String> value) {\r\n        for(int i = 0; i < json.length(); i++) {  // iterate through the JsonArray\r\n            // first I get the 'i' JsonElement as a JsonObject, then I get the key as a string and I compare it with the value\r\n            if(json.get(i).equals(value)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static boolean hasValue(JSONArray json, Pair<String, String> value) {\r\n        for(int i = 0; i < json.length(); i++)\r\n            if(json.get(i).equals(value)) return true;\r\n        return false;\r\n    }\r\n\r\n    public static boolean hasValue(JSONArray json, JSONArray value) {\r\n        for(int i = 0; i < json.length(); i++)\r\n            if(json.get(i).equals(value)) return true;\r\n        return false;\r\n    }\r\n\r\n    public static boolean hasValue(ArrayList<Long> list, Long channel) {\r\n        for (Long aLong : list)\r\n            if (aLong.equals(channel)) return true;\r\n        return false;\r\n    }\r\n\r\n    public static boolean hasValue(ArrayList<Pair<String, String>> data, Pair<String, String> meme) {\r\n\r\n        for (Pair<String,String> num : data)\r\n            if (num.equals(meme)) return true;\r\n        return false;\r\n\r\n    }\r\n\r\n    public static boolean hasValue(HashSet<Long> list, Long channel) {\r\n        for (Long aLong : list)\r\n            if (aLong.equals(channel)) return true;\r\n        return false;\r\n    }\r\n\r\n    public static boolean hasValue(List<Map<String, String>> list, Map<String, String> meme) {\r\n        for (Map<String, String> data : list)\r\n            if (data.equals(meme)) return true;\r\n        return false;\r\n    }\r\n\r\n    public static int EmojiToNumber(String emoji) {\r\n        switch (emoji){\r\n            default: return -1;\r\n            case \"0Ô∏è‚É£\": return 0;\r\n            case \"1Ô∏è‚É£\": return 1;\r\n            case \"2Ô∏è‚É£\": return 2;\r\n            case \"3Ô∏è‚É£\": return 3;\r\n            case \"4Ô∏è‚É£\": return 4;\r\n            case \"5Ô∏è‚É£\": return 5;\r\n            case \"6Ô∏è‚É£\": return 6;\r\n            case \"7Ô∏è‚É£\": return 7;\r\n            case \"8Ô∏è‚É£\": return 8;\r\n            case \"9Ô∏è‚É£\": return 9;\r\n\r\n        }\r\n    }\r\n\r\n    public static boolean isValidUrl(String imageAddress) {\r\n        UrlValidator validator = new UrlValidator();\r\n        return validator.isValid(imageAddress);\r\n    }\r\n\r\n    public static boolean checkImage(String imageAddress) {\r\n        if(isValidUrl(imageAddress)) {\r\n            HttpURLConnection connection;\r\n            try {\r\n                connection = (HttpURLConnection) new URL(imageAddress).openConnection();\r\n                connection.setRequestMethod(\"HEAD\");\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n                return false;\r\n            }\r\n            String contentType = connection.getHeaderField(\"Content-Type\");\r\n\r\n            return contentType.startsWith(\"image/\");\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static InputStream getBackground(Settings settings, boolean b) {\r\n        if (b){\r\n            String image = settings.getHelloImage();\r\n            if ( image == null){\r\n                ClassLoader classloader = Thread.currentThread().getContextClassLoader();\r\n                return classloader.getResourceAsStream(\"images/bienvenida.png\");\r\n            }\r\n            else {\r\n                return imageFromUrl(image);\r\n            }\r\n        } else {\r\n            String image = settings.getGoodByeImage();\r\n            if ( image == null){\r\n                ClassLoader classloader = Thread.currentThread().getContextClassLoader();\r\n                return classloader.getResourceAsStream(\"images/despedida.png\");\r\n            }\r\n            else {\r\n                return imageFromUrl(image);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/eme22/bolo/utils/OtherUtil.java b/src/main/java/com/eme22/bolo/utils/OtherUtil.java
--- a/src/main/java/com/eme22/bolo/utils/OtherUtil.java	(revision e59a9e33c37365adb08ea3a1aa6fcbe3d980854e)
+++ b/src/main/java/com/eme22/bolo/utils/OtherUtil.java	(date 1646250702470)
@@ -19,7 +19,7 @@
 import com.eme22.bolo.entities.Pair;
 import com.eme22.bolo.entities.Poll;
 import com.eme22.bolo.entities.Prompt;
-import com.eme22.bolo.settings.Settings;
+import com.eme22.bolo.entities.Settings;
 import net.dv8tion.jda.api.OnlineStatus;
 import net.dv8tion.jda.api.entities.Activity;
 import okhttp3.OkHttpClient;
@@ -632,4 +632,8 @@
             }
         }
     }
+
+    public static boolean hasValue(List<Long> imageOnlyChannelsIds, Long channel) {
+        return imageOnlyChannelsIds.contains(channel);
+    }
 }
Index: src/main/java/com/eme22/bolo/entities/Settings.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/eme22/bolo/entities/Settings.java b/src/main/java/com/eme22/bolo/entities/Settings.java
new file mode 100644
--- /dev/null	(date 1646250702482)
+++ b/src/main/java/com/eme22/bolo/entities/Settings.java	(date 1646250702482)
@@ -0,0 +1,269 @@
+
+package com.eme22.bolo.entities;
+
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.HashSet;
+import java.util.List;
+
+import com.eme22.bolo.settings.RepeatMode;
+import com.eme22.bolo.utils.OtherUtil;
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import com.fasterxml.jackson.annotation.JsonInclude;
+import com.fasterxml.jackson.annotation.JsonProperty;
+import com.fasterxml.jackson.annotation.JsonPropertyOrder;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.With;
+import net.dv8tion.jda.api.entities.Guild;
+import net.dv8tion.jda.api.entities.Role;
+import net.dv8tion.jda.api.entities.TextChannel;
+import net.dv8tion.jda.api.entities.VoiceChannel;
+
+@JsonInclude(JsonInclude.Include.NON_NULL)
+@JsonPropertyOrder({
+    "id",
+    "text_channel_id",
+    "voice_channel_id",
+    "dj_role_id",
+    "admin_role_id",
+    "volume",
+    "default_playlist",
+    "repeat_mode",
+    "prefix",
+    "skip_ratio",
+    "bienvenidas_channel_id",
+    "despedidas_channel_id",
+    "image_only_channels_ids",
+    "meme_images"
+})
+@With
+@AllArgsConstructor
+@Getter
+public class Settings implements Serializable
+{
+
+    @JsonIgnore
+    private  SettingsManager manager;
+    @JsonProperty("id")
+    private long id;
+    @JsonProperty("text_channel_id")
+    private long textChannelId;
+    @JsonProperty("voice_channel_id")
+    private long voiceChannelId;
+    @JsonProperty("dj_role_id")
+    private long djRoleId;
+    @JsonProperty("admin_role_id")
+    private long adminRoleId;
+    @JsonProperty("volume")
+    private int volume;
+    @JsonProperty("default_playlist")
+    protected String defaultPlaylist;
+    @JsonProperty("repeat_mode")
+    private RepeatMode repeatMode;
+    @JsonProperty("prefix")
+    private String prefix;
+    @JsonProperty("skip_ratio")
+    private double skipRatio;
+    @JsonProperty("bienvenidas_channel_id")
+    private long bienvenidasChannelId;
+    @JsonProperty("despedidas_channel_id")
+    private long despedidasChannelId;
+    @JsonProperty("image_only_channels_ids")
+    private HashSet<Long> imageOnlyChannelsIds;
+    @JsonProperty("meme_images")
+    private List<MemeImage> memeImages;
+    private final static long serialVersionUID = -7716597645084236573L;
+
+    public void setManager(SettingsManager manager) {
+        this.manager = manager;
+    }
+
+    @JsonProperty("id")
+    public void setId(long id) {
+        this.id = id;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("text_channel_id")
+    public void setTextChannelId(long textChannelId) {
+        this.textChannelId = textChannelId;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("voice_channel_id")
+    public void setVoiceChannelId(long voiceChannelId) {
+        this.voiceChannelId = voiceChannelId;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("dj_role_id")
+    public void setDjRoleId(long djRoleId) {
+        this.djRoleId = djRoleId;
+    }
+
+    @JsonProperty("admin_role_id")
+    public void setAdminRoleId(long adminRoleId) {
+        this.adminRoleId = adminRoleId;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("volume")
+    public void setVolume(int volume) {
+        this.volume = volume;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("repeat_mode")
+    public void setRepeatMode(RepeatMode repeatMode) {
+        this.repeatMode = repeatMode;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("prefix")
+    public void setPrefix(String prefix) {
+        this.prefix = prefix;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("skip_ratio")
+    public void setSkipRatio(double skipRatio) {
+        this.skipRatio = skipRatio;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("bienvenidas_channel_id")
+    public void setBienvenidasChannelId(long bienvenidasChannelId) {
+        this.bienvenidasChannelId = bienvenidasChannelId;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("despedidas_channel_id")
+    public void setDespedidasChannelId(long despedidasChannelId) {
+        this.despedidasChannelId = despedidasChannelId;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("image_only_channels_ids")
+    public void setImageOnlyChannelsIds(HashSet<Long> imageOnlyChannelsIds) {
+        this.imageOnlyChannelsIds = imageOnlyChannelsIds;
+        this.manager.writeSettings();
+    }
+
+    @JsonProperty("meme_images")
+    public void setMemeImages(List<MemeImage> memeImages) {
+        this.memeImages = memeImages;
+        this.manager.writeSettings();
+    }
+
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(Settings.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
+        sb.append("id");
+        sb.append('=');
+        sb.append(this.id);
+        sb.append(',');
+        sb.append("textChannelId");
+        sb.append('=');
+        sb.append(this.textChannelId);
+        sb.append(',');
+        sb.append("voiceChannelId");
+        sb.append('=');
+        sb.append(this.voiceChannelId);
+        sb.append(',');
+        sb.append("djRoleId");
+        sb.append('=');
+        sb.append(this.djRoleId);
+        sb.append(',');
+        sb.append("adminRoleId");
+        sb.append('=');
+        sb.append(this.adminRoleId);
+        sb.append(',');
+        sb.append("volume");
+        sb.append('=');
+        sb.append(this.volume);
+        sb.append(',');
+        sb.append("default_playlist");
+        sb.append('=');
+        sb.append(((this.defaultPlaylist == null)?"<null>":this.defaultPlaylist));
+        sb.append(',');
+        sb.append("repeatMode");
+        sb.append('=');
+        sb.append(this.repeatMode);
+        sb.append(',');
+        sb.append("prefix");
+        sb.append('=');
+        sb.append(((this.prefix == null)?"<null>":this.prefix));
+        sb.append(',');
+        sb.append("skipRatio");
+        sb.append('=');
+        sb.append(this.skipRatio);
+        sb.append(',');
+        sb.append("bienvenidasChannelId");
+        sb.append('=');
+        sb.append(this.bienvenidasChannelId);
+        sb.append(',');
+        sb.append("despedidasChannelId");
+        sb.append('=');
+        sb.append(this.despedidasChannelId);
+        sb.append(',');
+        sb.append("imageOnlyChannelsIds");
+        sb.append('=');
+        sb.append(((this.imageOnlyChannelsIds == null)?"<null>":this.imageOnlyChannelsIds));
+        sb.append(',');
+        sb.append("memeImages");
+        sb.append('=');
+        sb.append(((this.memeImages == null)?"<null>":this.memeImages));
+        sb.append(',');
+        if (sb.charAt((sb.length()- 1)) == ',') {
+            sb.setCharAt((sb.length()- 1), ']');
+        } else {
+            sb.append(']');
+        }
+        return sb.toString();
+    }
+
+    public TextChannel getTextChannel(Guild guild) {
+        return guild == null ? null : guild.getTextChannelById(textChannelId);
+    }
+
+    public VoiceChannel getVoiceChannel(Guild guild) {
+        return guild == null ? null : guild.getVoiceChannelById(voiceChannelId);
+    }
+
+    public Role getDJRole(Guild guild) {
+        return guild == null ? null : guild.getRoleById(djRoleId);
+    }
+
+    public Role getAdminRole(Guild guild) {
+        return guild == null ? null : guild.getRoleById(adminRoleId);
+    }
+
+    public TextChannel getHelloChannel(Guild guild) {
+        return guild == null ? null : guild.getTextChannelById(bienvenidasChannelId);
+    }
+
+    public TextChannel getGoodbyeChannel(Guild guild) {
+        return guild == null ? null : guild.getTextChannelById(despedidasChannelId);
+    }
+
+    public ArrayList<TextChannel> getOnlyImageChannels(Guild guild) {
+
+        ArrayList<TextChannel> channels = new ArrayList<>();
+        this.imageOnlyChannelsIds.forEach(channelid -> channels.add(guild.getTextChannelById(String.valueOf(channelid))));
+        return channels;
+    }
+
+    public void addOnlyImageChannels(TextChannel onlyImageChannel) {
+
+        imageOnlyChannelsIds.add(onlyImageChannel.getIdLong());
+        this.manager.writeSettings();
+    }
+
+    public void removeFromOnlyImageChannels(TextChannel onlyImageChannel) {
+
+        imageOnlyChannelsIds.removeIf(element -> element.equals(onlyImageChannel.getIdLong()));
+        this.manager.writeSettings();
+    }
+}
Index: src/main/java/com/eme22/bolo/entities/SettingsManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/eme22/bolo/entities/SettingsManager.java b/src/main/java/com/eme22/bolo/entities/SettingsManager.java
new file mode 100644
--- /dev/null	(date 1646250702456)
+++ b/src/main/java/com/eme22/bolo/entities/SettingsManager.java	(date 1646250702456)
@@ -0,0 +1,123 @@
+
+package com.eme22.bolo.entities;
+
+import com.eme22.bolo.settings.RepeatMode;
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import com.fasterxml.jackson.annotation.JsonInclude;
+import com.fasterxml.jackson.annotation.JsonProperty;
+import com.fasterxml.jackson.annotation.JsonPropertyOrder;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.jagrosh.jdautilities.command.GuildSettingsManager;
+import net.dv8tion.jda.api.entities.Guild;
+import org.slf4j.LoggerFactory;
+
+import java.io.IOException;
+import java.io.Serializable;
+import java.nio.file.Paths;
+import java.util.ArrayList;
+import java.util.List;
+
+@JsonInclude(JsonInclude.Include.NON_NULL)
+@JsonPropertyOrder({
+    "servers"
+})
+
+public class SettingsManager implements Serializable, GuildSettingsManager<Settings>
+{
+    @JsonIgnore
+    private final static double SKIP_RATIO = .55;
+
+    @JsonProperty("servers")
+    private List<Settings> settings = new ArrayList<Settings>();
+    private final static long serialVersionUID = -3030554324892977707L;
+
+    @JsonProperty("servers")
+    public List<Settings> getServers() {
+        return settings;
+    }
+
+    @JsonProperty("servers")
+    public void setServers(List<Settings> settings) {
+        this.settings = settings;
+    }
+
+    public SettingsManager withServers(List<Settings> settings) {
+        this.settings = settings;
+        return this;
+    }
+
+    public SettingsManager() {
+
+        try {
+            ObjectMapper mapper = new ObjectMapper();
+            this.settings = mapper.readValue(Paths.get("serversettings.json").toFile(), SettingsManager.class).settings;
+            this.settings.replaceAll( settings1 -> settings1.withManager(this));
+
+        } catch (Exception ex) {
+            ex.printStackTrace();
+        }
+    }
+
+    public void writeSettings()
+    {
+        try {
+            ObjectMapper mapper = new ObjectMapper();
+            mapper.writeValue(Paths.get("serversettings.json").toFile(), settings);
+        } catch (IOException e) {
+            e.printStackTrace();
+            LoggerFactory.getLogger("Settings").warn("Failed to write to file: "+e);
+
+        }
+    }
+
+    protected void deleteSettings(String guild)
+    {
+        settings.remove(getSettings(Long.parseLong(guild)));
+        writeSettings();
+
+    }
+
+    protected void deleteSettings(long guild)
+    {
+        settings.remove(getSettings(guild));
+        writeSettings();
+
+    }
+
+    public Settings getSettings(long guildId)
+    {
+        return settings.stream().filter(setting -> setting.getId() == guildId).findFirst().orElse(createDefaultSettings());
+    }
+
+    public Settings getSettings(Guild guild)
+    {
+        return settings.stream().filter(setting -> setting.getId() == Long.parseLong(guild.getId())).findFirst().orElse(createDefaultSettings());
+    }
+
+    public Settings getSettings(String guildId)
+    {
+        return settings.stream().filter(setting -> setting.getId() == Long.parseLong(guildId)).findFirst().orElse(createDefaultSettings());
+    }
+
+    private Settings createDefaultSettings()
+    {
+        return new Settings(this, 0, 0, 0, 0, 100, 100,null ,RepeatMode.OFF, null, SKIP_RATIO, 0, 0, new ArrayList<>(), new ArrayList<>());
+    }
+
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(SettingsManager.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
+        sb.append("servers");
+        sb.append('=');
+        sb.append(((this.settings == null)?"<null>":this.settings));
+        sb.append(',');
+        if (sb.charAt((sb.length()- 1)) == ',') {
+            sb.setCharAt((sb.length()- 1), ']');
+        } else {
+            sb.append(']');
+        }
+        return sb.toString();
+    }
+
+}
Index: src/main/java/com/eme22/bolo/entities/MemeImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/eme22/bolo/entities/MemeImage.java b/src/main/java/com/eme22/bolo/entities/MemeImage.java
new file mode 100644
--- /dev/null	(date 1646177086355)
+++ b/src/main/java/com/eme22/bolo/entities/MemeImage.java	(date 1646177086355)
@@ -0,0 +1,74 @@
+
+package com.eme22.bolo.entities;
+
+import java.io.Serializable;
+import com.fasterxml.jackson.annotation.JsonInclude;
+import com.fasterxml.jackson.annotation.JsonProperty;
+import com.fasterxml.jackson.annotation.JsonPropertyOrder;
+
+@JsonInclude(JsonInclude.Include.NON_NULL)
+@JsonPropertyOrder({
+    "message",
+    "meme"
+})
+
+public class MemeImage implements Serializable
+{
+
+    @JsonProperty("message")
+    private String message;
+    @JsonProperty("meme")
+    private String meme;
+    private final static long serialVersionUID = 4505984831928332802L;
+
+    @JsonProperty("message")
+    public String getMessage() {
+        return message;
+    }
+
+    @JsonProperty("message")
+    public void setMessage(String message) {
+        this.message = message;
+    }
+
+    public MemeImage withMessage(String message) {
+        this.message = message;
+        return this;
+    }
+
+    @JsonProperty("meme")
+    public String getMeme() {
+        return meme;
+    }
+
+    @JsonProperty("meme")
+    public void setMeme(String meme) {
+        this.meme = meme;
+    }
+
+    public MemeImage withMeme(String meme) {
+        this.meme = meme;
+        return this;
+    }
+
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(MemeImage.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
+        sb.append("message");
+        sb.append('=');
+        sb.append(((this.message == null)?"<null>":this.message));
+        sb.append(',');
+        sb.append("meme");
+        sb.append('=');
+        sb.append(((this.meme == null)?"<null>":this.meme));
+        sb.append(',');
+        if (sb.charAt((sb.length()- 1)) == ',') {
+            sb.setCharAt((sb.length()- 1), ']');
+        } else {
+            sb.append(']');
+        }
+        return sb.toString();
+    }
+
+}
Index: src/main/java/webserver/WebServerMini.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/webserver/WebServerMini.java b/src/main/java/webserver/WebServerMini.java
new file mode 100644
--- /dev/null	(date 1646173630887)
+++ b/src/main/java/webserver/WebServerMini.java	(date 1646173630887)
@@ -0,0 +1,126 @@
+package webserver;
+
+import java.io.*;
+import java.net.ServerSocket;
+import java.util.StringTokenizer;
+
+public class WebServerMini implements Runnable {
+
+    private final int port;
+
+    public WebServerMini(int port) {
+        this.port = port;
+    }
+
+    @Override
+    public void run() {
+
+        ServerSocket server_socket;
+        BufferedReader input;
+        String lineToBeSent;
+
+        PrintWriter output;
+        try {
+
+            server_socket = new ServerSocket(port);
+            System.out.println("Esperando cliente en el puerto " +
+                    server_socket.getLocalPort());
+
+            while(true) {
+                java.net.Socket socket = server_socket.accept();
+                System.out.println("Coneccion aceptada de " +
+                        socket.getInetAddress() + ":" + socket.getPort());
+                input = new BufferedReader(new InputStreamReader(socket.getInputStream())); // print received data
+                try {
+                    while(true) {
+                        String message = input.readLine();
+                        if (message==null) break;
+                        System.out.println(message);
+                        if (message.equals("PING|")) {
+                            output = new PrintWriter(socket.getOutputStream(),true); // get user input and transmit it to server
+
+                            lineToBeSent = "OK";// stop if input line is "."
+                            output.println(lineToBeSent);
+                            //socket.close();
+                            return;
+                        }
+
+                        StringTokenizer st = new StringTokenizer(message);
+                        String method = st.nextToken();
+
+                        boolean get = method.equals("GET");
+                        boolean head = method.equals("HEAD");
+
+                        if (!(get || head)) {
+                            System.err.println("Solo metodos HTTP \"GET\" && \"HEAD\" implementado");
+                            socket.close();
+                            return;
+                        }
+
+                        while ((message = input.readLine()) != null) {
+                            if (message.trim().equals("")) break;
+                        }
+                        String file = st.nextToken();
+
+                        if (file.charAt(0) != '/') {
+                            System.err.println("Saliendo: El nombre de archivo debe iniciar "
+                                    + "con \"/\"");
+                            return;
+                        }
+                        if (file.contains("../")) {
+                            System.err.println("Saliendo: \"../\" no esta permitido en el nombre de archivo");
+                            return;
+                        }
+                        sendFile(new PrintStream(socket.getOutputStream()), file, head);
+                        socket.close();
+                    }
+                }
+                catch (IOException ignore) {
+                    System.out.println("Coneccion cerrada por el cliente");
+                }
+            }
+        }
+
+        catch (IOException e) {
+            e.printStackTrace();
+        }
+
+
+    }
+
+    void sendFile(PrintStream os, String file, boolean head) {
+        System.out.println("Solicitud de archivo \""  + file + "\"");
+
+        if (file.equals("/")){
+            sendFile(os, "/index.html", head);
+            return;
+        }
+
+        File theFile;
+        try {
+            theFile = new File(file.substring(1));
+            if (!theFile.exists()){
+                sendFile(os, "/404.html", head);
+                return;
+            }
+            FileInputStream fis = new FileInputStream(theFile);
+            byte[] theData = new byte[(int) theFile.length()];
+            fis.read(theData);
+            fis.close();
+
+            //HEADERS
+            os.print("HTTP/1.0 200 OK\r\n");
+            os.print("Server: Bolo/1.0\r\n");
+            if(theFile.getName().contains("html"))
+                os.print("Content-Type: text/html\r\n");
+            os.print("Content-Length: "+ (int) theFile.length());
+            os.print("\r\n");
+            if (!head)
+                os.write(theData);
+            os.close();
+        }
+        catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+}
Index: src/main/java/com/eme22/bolo/Bolo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright 2016 John Grosh (jagrosh).\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npackage com.eme22.bolo;\r\n\r\nimport com.eme22.bolo.commands.admin.*;\r\nimport com.eme22.bolo.commands.dj.*;\r\nimport com.eme22.bolo.commands.general.*;\r\nimport com.eme22.bolo.commands.music.*;\r\nimport com.eme22.bolo.commands.owner.*;\r\nimport com.eme22.bolo.entities.Prompt;\r\nimport com.eme22.bolo.gui.GUI;\r\nimport com.eme22.bolo.settings.SettingsManager;\r\nimport com.eme22.bolo.utils.OtherUtil;\r\nimport com.jagrosh.jdautilities.command.CommandClientBuilder;\r\nimport com.jagrosh.jdautilities.commons.waiter.EventWaiter;\r\nimport com.jagrosh.jdautilities.examples.command.AboutCommand;\r\nimport com.jagrosh.jdautilities.examples.command.PingCommand;\r\nimport net.dv8tion.jda.api.JDA;\r\nimport net.dv8tion.jda.api.JDABuilder;\r\nimport net.dv8tion.jda.api.OnlineStatus;\r\nimport net.dv8tion.jda.api.Permission;\r\nimport net.dv8tion.jda.api.entities.Activity;\r\nimport net.dv8tion.jda.api.requests.GatewayIntent;\r\nimport net.dv8tion.jda.api.utils.cache.CacheFlag;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.webbitserver.WebServer;\r\nimport org.webbitserver.WebServers;\r\nimport org.webbitserver.handler.NotFoundHttpHandler;\r\nimport org.webbitserver.handler.StaticFileHandler;\r\n\r\nimport javax.security.auth.login.LoginException;\r\nimport java.awt.*;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.util.Arrays;\r\n\r\n/**\r\n *\r\n * @author John Grosh (jagrosh)\r\n */\r\npublic class Bolo\r\n{\r\n    public final static String PLAY_EMOJI  = \"\\u25B6\"; // ‚ñ∂\r\n    public final static String PAUSE_EMOJI = \"\\u23F8\"; // ‚è∏\r\n    public final static String STOP_EMOJI  = \"\\u23F9\"; // ‚èπ\r\n    public final static Permission[] RECOMMENDED_PERMS = {Permission.MESSAGE_READ, Permission.MESSAGE_WRITE, Permission.MESSAGE_HISTORY, Permission.MESSAGE_ADD_REACTION,\r\n                                Permission.MESSAGE_EMBED_LINKS, Permission.MESSAGE_ATTACH_FILES, Permission.MESSAGE_MANAGE, Permission.MESSAGE_EXT_EMOJI,\r\n                                Permission.MANAGE_CHANNEL, Permission.VOICE_CONNECT, Permission.VOICE_SPEAK, Permission.NICKNAME_CHANGE};\r\n    public final static GatewayIntent[] INTENTS = {GatewayIntent.DIRECT_MESSAGES, GatewayIntent.GUILD_MESSAGES, GatewayIntent.GUILD_MESSAGE_REACTIONS, GatewayIntent.GUILD_VOICE_STATES, GatewayIntent.GUILD_MEMBERS};\r\n    /**\r\n     * @param args the command line arguments\r\n     */\r\n    public static void main(String[] args)\r\n    {\r\n        // startup log\r\n        Logger log = LoggerFactory.getLogger(\"Startup\");\r\n\r\n        waitExec(log, args);\r\n        startSocket();\r\n\r\n        // create prompt to handle startup\r\n        Prompt prompt = new Prompt(\"JMusicBot\", \"Switching to nogui mode. You can manually start in nogui mode by including the -Dnogui=true flag.\");\r\n        \r\n        // get and check latest version\r\n        String version = OtherUtil.checkVersion(prompt);\r\n\r\n        try {\r\n            OtherUtil.loadFileFromGit(new File(\"serversettings.json\"));\r\n        } catch (IOException | NoSuchAlgorithmException | NullPointerException e) {\r\n            LoggerFactory.getLogger(\"Settings\").warn(\"Se ha fallado en cargar las opciones del servidor, se usaran las locales: \"+e);\r\n\r\n        }\r\n\r\n        try {\r\n            OtherUtil.loadFileFromGit(new File(\"serverpolls.json\"));\r\n        }catch (IOException | NullPointerException | NoSuchAlgorithmException e){\r\n            LoggerFactory.getLogger(\"Settings\").warn(\"Se ha fallado en cargar los datos de votaciones del servidor: \"+e);\r\n        }\r\n\r\n        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\r\n            try {\r\n                OtherUtil.writeFileToGitHub(new File(\"serversettings.json\"));\r\n            } catch (IOException | NoSuchAlgorithmException | NullPointerException e) {\r\n                e.printStackTrace();\r\n            }\r\n            try {\r\n                OtherUtil.writeFileToGitHub(new File(\"serverpolls.json\"));\r\n            } catch (IOException | NoSuchAlgorithmException | NullPointerException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }));\r\n\r\n        // check for valid java version\r\n        if(!System.getProperty(\"java.vm.name\").contains(\"64\"))\r\n            prompt.alert(Prompt.Level.WARNING, \"Java Version\", \"It appears that you may not be using a supported Java version. Please use 64-bit java.\");\r\n        \r\n        // load config\r\n        BotConfig config = new BotConfig(prompt);\r\n        config.load();\r\n        if(!config.isValid())\r\n            return;\r\n        \r\n        // set up the listener\r\n        EventWaiter waiter = new EventWaiter();\r\n        SettingsManager settings = new SettingsManager();\r\n        Bot bot = new Bot(waiter, config, settings);\r\n        \r\n        AboutCommand aboutCommand = new AboutCommand(Color.BLUE.brighter(),\r\n                                \"Hola soy Bolo' un BOT con lag) (v\"+version+\") [Status: https://bolo2022.herokuapp.com/]\",\r\n                                new String[]{\"Musica en HD\", \"Mensaje de bienvenida y despedida\", \"Limpiar mensajes\"},\r\n                                RECOMMENDED_PERMS);\r\n        aboutCommand.setIsAuthor(false);\r\n        aboutCommand.setReplacementCharacter(\"\\uD83C\\uDFB6\"); // \uD83C\uDFB6\r\n        \r\n        // set up the command client\r\n        CommandClientBuilder cb = new CommandClientBuilder()\r\n                .setPrefix(config.getPrefix())\r\n                .setAlternativePrefix(config.getAltPrefix())\r\n                .setOwnerId(Long.toString(config.getOwnerId()))\r\n                .setEmojis(config.getSuccess(), config.getWarning(), config.getError())\r\n                .setHelpWord(config.getHelp())\r\n                .setLinkedCacheSize(200)\r\n                .setGuildSettingsManager(settings)\r\n                .addCommands(aboutCommand,\r\n                        new PingCommand(),\r\n                        new SettingsCmd(bot),\r\n                        new AvatarCmd(bot),\r\n                        new MemeCmd(bot),\r\n                        new MemeListCmd(bot),\r\n                        new ShowImageChannelsCmd(bot),\r\n\r\n                        new LyricsCmd(bot),\r\n                        new NowplayingCmd(bot),\r\n                        new PlayCmd(bot),\r\n                        new PlaylistsCmd(bot),\r\n                        new QueueCmd(bot),\r\n                        new RemoveCmd(bot),\r\n                        new SearchCmd(bot),\r\n                        new SCSearchCmd(bot),\r\n                        new ShuffleCmd(bot),\r\n                        new SkipCmd(bot),\r\n\r\n                        new ForceRemoveCmd(bot),\r\n                        new ForceskipCmd(bot),\r\n                        new MoveTrackCmd(bot),\r\n                        new PauseCmd(bot),\r\n                        new PlaynextCmd(bot),\r\n                        new RepeatCmd(bot),\r\n                        new SkiptoCmd(bot),\r\n                        new StopCmd(bot),\r\n                        new VolumeCmd(bot),\r\n\r\n                        new PrefixCmd(bot),\r\n                        new SetdjCmd(bot),\r\n                        new PollCmd(bot),\r\n                        new AddMemeCmd(bot),\r\n                        new RemoveMemeCmd(bot),\r\n                        new AddImageChannel(bot),\r\n                        new DeleteImageChannel(bot),\r\n                        new SetWelcomeCmd(bot),\r\n                        new SetGoodByeCmd(bot),\r\n                        new CloneChannelCmd(bot),\r\n                        new CloneAndDeleteChannel(bot),\r\n                        new SetAdminCmd(bot),\r\n                        new SkipratioCmd(bot),\r\n                        new SettcCmd(bot),\r\n                        new SetvcCmd(bot),\r\n                        new ClearDataCmd(bot),\r\n                        new ClearMessagesCmd(bot),\r\n                        \r\n                        new AutoplaylistCmd(bot),\r\n                        new DebugCmd(bot),\r\n                        new PlaylistCmd(bot),\r\n                        new SetavatarCmd(bot),\r\n                        new SetgameCmd(bot),\r\n                        new SetnameCmd(bot),\r\n                        new SetstatusCmd(bot),\r\n                        new ShutdownCmd(bot)\r\n                );\r\n        if(config.useEval())\r\n            cb.addCommand(new EvalCmd(bot));\r\n        boolean nogame = false;\r\n        if(config.getStatus()!=OnlineStatus.UNKNOWN)\r\n            cb.setStatus(config.getStatus());\r\n        if(config.getGame()==null)\r\n            cb.useDefaultGame();\r\n        else if(config.getGame().getName().equalsIgnoreCase(\"none\"))\r\n        {\r\n            cb.setActivity(null);\r\n            nogame = true;\r\n        }\r\n        else\r\n            cb.setActivity(config.getGame());\r\n        \r\n        if(!prompt.isNoGUI())\r\n        {\r\n            try \r\n            {\r\n                GUI gui = new GUI(bot);\r\n                bot.setGUI(gui);\r\n                gui.init();\r\n            } \r\n            catch(Exception e) \r\n            {\r\n                log.error(\"Could not start GUI. If you are \"\r\n                        + \"running on a server or in a location where you cannot display a \"\r\n                        + \"window, please run in nogui mode using the -Dnogui=true flag.\");\r\n            }\r\n        }\r\n        \r\n        log.info(\"Loaded config from \" + config.getConfigLocation());\r\n        \r\n        // attempt to log in and start\r\n        try\r\n        {\r\n            JDA jda = JDABuilder.create(config.getToken(), Arrays.asList(INTENTS))\r\n                    .enableCache(CacheFlag.MEMBER_OVERRIDES, CacheFlag.VOICE_STATE)\r\n                    .disableCache(CacheFlag.ACTIVITY, CacheFlag.CLIENT_STATUS, CacheFlag.EMOTE, CacheFlag.ONLINE_STATUS)\r\n                    .setActivity(nogame ? null : Activity.playing(\"loading...\"))\r\n                    .setStatus(config.getStatus()==OnlineStatus.INVISIBLE || config.getStatus()==OnlineStatus.OFFLINE \r\n                            ? OnlineStatus.INVISIBLE : OnlineStatus.DO_NOT_DISTURB)\r\n                    .addEventListeners(cb.build(), waiter, new Listener(bot))\r\n                    .setBulkDeleteSplittingEnabled(true)\r\n                    .build();\r\n            bot.setJDA(jda);\r\n        }\r\n        catch (LoginException ex)\r\n        {\r\n            prompt.alert(Prompt.Level.ERROR, \"JMusicBot\", ex + \"\\nPlease make sure you are \"\r\n                    + \"editing the correct config.txt file, and that you have used the \"\r\n                    + \"correct token (not the 'secret'!)\\nConfig Location: \" + config.getConfigLocation());\r\n            System.exit(1);\r\n        }\r\n        catch(IllegalArgumentException ex)\r\n        {\r\n            prompt.alert(Prompt.Level.ERROR, \"JMusicBot\", \"Some aspect of the configuration is \"\r\n                    + \"invalid: \" + ex + \"\\nConfig Location: \" + config.getConfigLocation());\r\n            System.exit(1);\r\n        }\r\n    }\r\n\r\n    private static void startSocket() {\r\n\r\n        String port = System.getProperty(\"server.port\");\r\n\r\n        WebServer webServer = WebServers.createWebServer(Integer.parseInt(port))\r\n                .add(new StaticFileHandler(\".\"))\r\n                .add( new webserver.NotFoundHandler())\r\n                ;\r\n        webServer.start();\r\n        System.out.println(\"Server running at \" + webServer.getUri());\r\n    }\r\n\r\n    private static void waitExec(Logger log, String[] args) {\r\n\r\n        boolean wait = true;\r\n\r\n        for (String arg : args) {\r\n            if (arg.equalsIgnoreCase(\"wait\")) {\r\n                wait = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (wait)\r\n            for(int j = 20; j >= 0; j--) {\r\n                log.info(j + \" seconds remaining\");\r\n                try {\r\n                    Thread.sleep(1000);\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/eme22/bolo/Bolo.java b/src/main/java/com/eme22/bolo/Bolo.java
--- a/src/main/java/com/eme22/bolo/Bolo.java	(revision e59a9e33c37365adb08ea3a1aa6fcbe3d980854e)
+++ b/src/main/java/com/eme22/bolo/Bolo.java	(date 1646249435168)
@@ -21,8 +21,8 @@
 import com.eme22.bolo.commands.music.*;
 import com.eme22.bolo.commands.owner.*;
 import com.eme22.bolo.entities.Prompt;
+import com.eme22.bolo.entities.SettingsManager;
 import com.eme22.bolo.gui.GUI;
-import com.eme22.bolo.settings.SettingsManager;
 import com.eme22.bolo.utils.OtherUtil;
 import com.jagrosh.jdautilities.command.CommandClientBuilder;
 import com.jagrosh.jdautilities.commons.waiter.EventWaiter;
@@ -39,7 +39,6 @@
 import org.slf4j.LoggerFactory;
 import org.webbitserver.WebServer;
 import org.webbitserver.WebServers;
-import org.webbitserver.handler.NotFoundHttpHandler;
 import org.webbitserver.handler.StaticFileHandler;
 
 import javax.security.auth.login.LoginException;
@@ -262,8 +261,30 @@
                 .add(new StaticFileHandler("."))
                 .add( new webserver.NotFoundHandler())
                 ;
+        webServer.start();
+        System.out.println("Servidor en funcionamiento en" + webServer.getUri());
+
+        /*
+        String port = System.getProperty("server.port");
+        if (port == null) return;
+
+        try {
+            Thread thread = new Thread(new WebServerMini(Integer.parseInt(port)));
+            thread.start();
+        }
+        catch (Exception e){
+            e.printStackTrace();
+        }
+        */
+        /*
+        String port = System.getProperty("server.port");
+
+        WebServer webServer = WebServers.createWebServer(Integer.parseInt(port))
+                .add(new StaticFileHandler("."))
+                .add( new webserver.NotFoundHandler());
         webServer.start();
         System.out.println("Server running at " + webServer.getUri());
+         */
     }
 
     private static void waitExec(Logger log, String[] args) {
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/nbproject/\r\n/target/\r\n/Playlists/\r\n/test/\r\n*.json\r\n*.txt\r\nnb*.xml\r\n/out/\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision e59a9e33c37365adb08ea3a1aa6fcbe3d980854e)
+++ b/.gitignore	(date 1646164940571)
@@ -6,3 +6,4 @@
 *.txt
 nb*.xml
 /out/
+/.idea/
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7a6707ed-5084-4d28-8271-278e6ce00021\" name=\"Changes\" comment=\"WebServer bugfix\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"jar://$MAVEN_REPOSITORY$/com/jagrosh/jda-utilities-examples/3.0.5/jda-utilities-examples-3.0.5-sources.jar!/com/jagrosh/jdautilities/examples/command/AboutCommand.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MavenRunner\">\r\n    <option name=\"delegateBuildToMaven\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedIndex\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"24th8MFkrykiAQ6eQm0rPY4PfGw\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"DefaultHtmlFileTemplate\" value=\"HTML File\" />\r\n    <property name=\"Downloaded.Files.Path.Enabled\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Annotations\" value=\"false\" />\r\n    <property name=\"Repository.Attach.JavaDocs\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Sources\" value=\"false\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/src/main/resources\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Artifacts\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2908046\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"project.propVCSSupport.Mappings\" />\r\n  </component>\r\n  <component name=\"ReaderModeSettings\">\r\n    <option name=\"enabled\" value=\"false\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\MSB19\\IdeaProjects\\PGMUSICBOT\" />\r\n      <recent name=\"C:\\Users\\MSB19\\IdeaProjects\\PGMUSICBOT\\\" />\r\n      <recent name=\"C:\\Users\\MSB19\\IdeaProjects\\PGMUSICBOT\\src\\main\\resources\\images\" />\r\n    </key>\r\n    <key name=\"MoveMembersDialog.RECENTS_KEY\">\r\n      <recent name=\"com.eme22.bolo.utils.OtherUtil\" />\r\n    </key>\r\n    <key name=\"MoveInnerDialog.RECENTS_KEY\">\r\n      <recent name=\"com.eme22.bolo.commands.admin\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"com.eme22.bolo.commands.admin\" />\r\n      <recent name=\"com.eme22.bolo.commands.general\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Run\" type=\"Application\" factoryName=\"Application\">\r\n      <envs>\r\n        <env name=\"GITHUB_OAUTH\" value=\"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\" />\r\n      </envs>\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.eme22.bolo.Bolo\" />\r\n      <module name=\"Bolo\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"wait\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"-Dnogui=true -Dserver.port=5000\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7a6707ed-5084-4d28-8271-278e6ce00021\" name=\"Changes\" comment=\"\" />\r\n      <created>1644455634332</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1644455634332</updated>\r\n      <workItem from=\"1644455640279\" duration=\"2596000\" />\r\n      <workItem from=\"1644465005424\" duration=\"3837000\" />\r\n      <workItem from=\"1644469862989\" duration=\"970000\" />\r\n      <workItem from=\"1644531853627\" duration=\"30000\" />\r\n      <workItem from=\"1644533833912\" duration=\"4900000\" />\r\n      <workItem from=\"1644593939489\" duration=\"3914000\" />\r\n      <workItem from=\"1644628395973\" duration=\"9293000\" />\r\n      <workItem from=\"1644684284002\" duration=\"3252000\" />\r\n      <workItem from=\"1644690681586\" duration=\"2022000\" />\r\n      <workItem from=\"1644715471800\" duration=\"13690000\" />\r\n      <workItem from=\"1644768457070\" duration=\"979000\" />\r\n      <workItem from=\"1644769659443\" duration=\"1735000\" />\r\n      <workItem from=\"1644773912713\" duration=\"669000\" />\r\n      <workItem from=\"1644774607381\" duration=\"1822000\" />\r\n      <workItem from=\"1644776864937\" duration=\"308000\" />\r\n      <workItem from=\"1644777770881\" duration=\"4350000\" />\r\n      <workItem from=\"1644782634878\" duration=\"430000\" />\r\n      <workItem from=\"1644783178671\" duration=\"5077000\" />\r\n      <workItem from=\"1644789210018\" duration=\"3828000\" />\r\n      <workItem from=\"1644793367004\" duration=\"492000\" />\r\n      <workItem from=\"1644794039008\" duration=\"38000\" />\r\n      <workItem from=\"1644857578383\" duration=\"757000\" />\r\n      <workItem from=\"1644861467680\" duration=\"181000\" />\r\n      <workItem from=\"1644861701852\" duration=\"280000\" />\r\n      <workItem from=\"1644862004363\" duration=\"33000\" />\r\n      <workItem from=\"1644934184281\" duration=\"3397000\" />\r\n      <workItem from=\"1645025325950\" duration=\"1218000\" />\r\n      <workItem from=\"1645152866743\" duration=\"277000\" />\r\n      <workItem from=\"1645468628707\" duration=\"4281000\" />\r\n      <workItem from=\"1645474197517\" duration=\"4015000\" />\r\n      <workItem from=\"1645489470539\" duration=\"1186000\" />\r\n      <workItem from=\"1645491108808\" duration=\"11717000\" />\r\n      <workItem from=\"1645545662219\" duration=\"6854000\" />\r\n      <workItem from=\"1645553028902\" duration=\"552000\" />\r\n      <workItem from=\"1645553660258\" duration=\"1150000\" />\r\n      <workItem from=\"1645572226278\" duration=\"10744000\" />\r\n      <workItem from=\"1645631667989\" duration=\"157000\" />\r\n      <workItem from=\"1645723715821\" duration=\"4221000\" />\r\n      <workItem from=\"1645751274460\" duration=\"6446000\" />\r\n      <workItem from=\"1645766524222\" duration=\"2384000\" />\r\n      <workItem from=\"1645769117740\" duration=\"434000\" />\r\n      <workItem from=\"1645769629707\" duration=\"177000\" />\r\n      <workItem from=\"1645769974912\" duration=\"88000\" />\r\n      <workItem from=\"1645804621973\" duration=\"35942000\" />\r\n      <workItem from=\"1645887277288\" duration=\"22306000\" />\r\n      <workItem from=\"1645981427856\" duration=\"5059000\" />\r\n      <workItem from=\"1645999164489\" duration=\"4517000\" />\r\n      <workItem from=\"1646006824226\" duration=\"902000\" />\r\n      <workItem from=\"1646065216295\" duration=\"1467000\" />\r\n      <workItem from=\"1646086938851\" duration=\"491000\" />\r\n      <workItem from=\"1646147331218\" duration=\"390000\" />\r\n      <workItem from=\"1646152181869\" duration=\"1505000\" />\r\n      <workItem from=\"1646154302310\" duration=\"8210000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"a\">\r\n      <created>1644690778045</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644690778045</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"a\">\r\n      <created>1644691046627</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644691046627</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"a\">\r\n      <created>1644692344635</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644692344635</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"a\">\r\n      <created>1644729177956</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644729177956</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"a\">\r\n      <created>1644937274165</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644937274165</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"a\">\r\n      <created>1644937568941</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644937568941</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"MAJOR REFRACTOR\">\r\n      <created>1645839385639</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1645839385639</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"BUGFIXES\">\r\n      <created>1646067841247</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646067841247</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"BUGFIXES\">\r\n      <created>1646067908544</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646067908544</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646068477315</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646068477315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646068673126</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646068673127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646068899913</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646068899914</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646069080987</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646069080987</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646069260969</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646069260969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646070486989</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646070486989</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646072862324</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646072862324</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646073272870</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646073272870</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646073620400</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646073620400</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646073886793</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646073886793</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646073943797</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646073943797</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646076999861</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646076999861</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646080045989</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646080045989</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646080252136</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646080252136</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646081449561</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646081449561</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646081617233</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646081617233</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646081987698</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646081987698</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646083203175</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646083203175</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646083920158</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646083920158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646084370897</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646084370897</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646084682087</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646084682087</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646084815566</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646084815566</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646085704322</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646085704322</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646085834772</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646085834772</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646085945305</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646085945305</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646087031777</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646087031777</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646087418018</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646087418018</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646147598165</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646147598166</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"UPDATING TO PUSH\">\r\n      <created>1646156993483</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646156993484</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00039\" summary=\"WebServer bugfix\">\r\n      <created>1646158207802</created>\r\n      <option name=\"number\" value=\"00039\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646158207802</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"WebServer bugfix\">\r\n      <created>1646159324205</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646159324205</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"WebServer bugfix\">\r\n      <created>1646159838225</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646159838225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"WebServer bugfix\">\r\n      <created>1646160249714</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646160249714</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00043\" summary=\"WebServer bugfix\">\r\n      <created>1646162052482</created>\r\n      <option name=\"number\" value=\"00043\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646162052482</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"44\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/out/bolo2022/a/bolo2022\" />\r\n      <path value=\"$PROJECT_DIR$/out/bolo2022\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"a\" />\r\n    <MESSAGE value=\"MAJOR REFRACTOR\" />\r\n    <MESSAGE value=\"BUGFIXES\" />\r\n    <MESSAGE value=\"UPDATING TO PUSH\" />\r\n    <MESSAGE value=\"WebServer bugfix\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"WebServer bugfix\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e59a9e33c37365adb08ea3a1aa6fcbe3d980854e)
+++ b/.idea/workspace.xml	(date 1646249914804)
@@ -5,7 +5,18 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="7a6707ed-5084-4d28-8271-278e6ce00021" name="Changes" comment="WebServer bugfix">
+      <change afterPath="$PROJECT_DIR$/.github/workflows/maven.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/eme22/bolo/entities/MemeImage.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/eme22/bolo/entities/Settings.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/eme22/bolo/entities/SettingsManager.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/webserver/WebServerMini.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.github/workflows/test.yml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/test.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/eme22/bolo/Bolo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/eme22/bolo/Bolo.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/eme22/bolo/Bot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/eme22/bolo/Bot.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/eme22/bolo/settings/RepeatMode.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/eme22/bolo/settings/RepeatMode.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -60,9 +71,9 @@
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="WebServerToolWindowFactoryState" value="false" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$/src/main/resources" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/src/main/java/com/eme22/bolo/entities" />
     <property name="nodejs_package_manager_path" value="npm" />
-    <property name="project.structure.last.edited" value="Artifacts" />
+    <property name="project.structure.last.edited" value="Project" />
     <property name="project.structure.proportion" value="0.15" />
     <property name="project.structure.side.proportion" value="0.2908046" />
     <property name="settings.editor.selected.configurable" value="project.propVCSSupport.Mappings" />
@@ -71,6 +82,10 @@
     <option name="enabled" value="false" />
   </component>
   <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\MSB19\IdeaProjects\PGMUSICBOT\src\main\java\com\eme22\bolo\entities" />
+      <recent name="C:\Users\MSB19\IdeaProjects\PGMUSICBOT\src\main\java\com\eme22\bolo" />
+    </key>
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\MSB19\IdeaProjects\PGMUSICBOT" />
       <recent name="C:\Users\MSB19\IdeaProjects\PGMUSICBOT\" />
@@ -161,7 +176,9 @@
       <workItem from="1646086938851" duration="491000" />
       <workItem from="1646147331218" duration="390000" />
       <workItem from="1646152181869" duration="1505000" />
-      <workItem from="1646154302310" duration="8210000" />
+      <workItem from="1646154302310" duration="11114000" />
+      <workItem from="1646172666491" duration="4787000" />
+      <workItem from="1646244476531" duration="3881000" />
     </task>
     <task id="LOCAL-00001" summary="a">
       <created>1644690778045</created>
@@ -464,7 +481,14 @@
       <option name="project" value="LOCAL" />
       <updated>1646162052482</updated>
     </task>
-    <option name="localTasksCounter" value="44" />
+    <task id="LOCAL-00044" summary="WebServer bugfix">
+      <created>1646162686160</created>
+      <option name="number" value="00044" />
+      <option name="presentableId" value="LOCAL-00044" />
+      <option name="project" value="LOCAL" />
+      <updated>1646162686160</updated>
+    </task>
+    <option name="localTasksCounter" value="45" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <groupId>com.eme22</groupId>\r\n    <artifactId>bolo</artifactId>\r\n    <version>0.1.1-SNAPSHOT</version>\r\n    <packaging>jar</packaging>\r\n\r\n    <repositories>\r\n        <repository>\r\n            <id>jitpack.io</id>\r\n            <url>https://jitpack.io</url>\r\n        </repository>\r\n        <repository>\r\n            <id>dv8tion</id>\r\n            <name>m2-dv8tion</name>\r\n            <url>https://m2.dv8tion.net/releases</url>\r\n        </repository>\r\n        <repository>\r\n            <id>maven_central</id>\r\n            <name>Maven Central</name>\r\n            <url>https://repo.maven.apache.org/maven2/</url>\r\n        </repository>\r\n        <repository>\r\n            <id>pentaho</id>\r\n            <name>Pentaho.org</name>\r\n            <url>https://public.nexus.pentaho.org/content/groups/omni/</url>\r\n        </repository>\r\n    </repositories>\r\n    \r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>net.dv8tion</groupId> \r\n            <artifactId>JDA</artifactId> \r\n            <version>4.3.0_324</version>\r\n        </dependency>\r\n        <!-- using a fork of this to fix some issues faster -->\r\n        <!-- dependency>\r\n            <groupId>com.sedmelluq</groupId>\r\n            <artifactId>lavaplayer</artifactId>\r\n            <version>1.3.78</version>\r\n        </dependency -->\r\n        <dependency>\r\n            <groupId>com.github.walkyst</groupId>\r\n            <artifactId>lavaplayer-fork</artifactId>\r\n            <version>1.3.97</version>\r\n        </dependency>\r\n        <!-- this is needed, but isn't actually hosted anywhere anymore... uh -->\r\n        <!--dependency>\r\n            <groupId>com.sedmelluq</groupId>\r\n            <artifactId>lavaplayer-natives-extra</artifactId>\r\n            <version>1.3.13</version>\r\n        </dependency-->\r\n        <dependency>\r\n            <groupId>com.jagrosh</groupId>\r\n            <artifactId>jda-utilities</artifactId>\r\n            <version>3.0.5</version>\r\n            <type>pom</type>\r\n        </dependency>\r\n        <!-- jitpack for now, we need to version this correctly later -->\r\n        <dependency>\r\n            <groupId>com.github.jagrosh</groupId>\r\n            <artifactId>JLyrics</artifactId>\r\n            <version>-SNAPSHOT</version>\r\n        </dependency>\r\n        <!--dependency>\r\n            <groupId>com.jagrosh</groupId>\r\n            <artifactId>JLyrics</artifactId>\r\n            <version>0.6</version>\r\n        </dependency-->\r\n        <dependency>\r\n            <groupId>ch.qos.logback</groupId>\r\n            <artifactId>logback-classic</artifactId>\r\n            <version>1.2.3</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.typesafe</groupId>\r\n            <artifactId>config</artifactId>\r\n            <version>1.3.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.jsoup</groupId>\r\n            <artifactId>jsoup</artifactId>\r\n            <version>1.14.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>4.13.1</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.hamcrest</groupId>\r\n            <artifactId>hamcrest-core</artifactId>\r\n            <version>1.3</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.kohsuke</groupId>\r\n            <artifactId>github-api</artifactId>\r\n            <version>1.301</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.google.code.gson</groupId>\r\n            <artifactId>gson</artifactId>\r\n            <version>2.8.5</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>commons-validator</groupId>\r\n            <artifactId>commons-validator</artifactId>\r\n            <version>1.7</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.22</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.webbitserver</groupId>\r\n            <artifactId>webbit</artifactId>\r\n            <version>0.4.15</version>\r\n        </dependency>\r\n    </dependencies>\r\n    \r\n    <build>\r\n      <plugins>\r\n          <plugin>\r\n              <artifactId>maven-jar-plugin</artifactId>\r\n              <version>2.3.1</version>\r\n              <executions>\r\n                  <execution>\r\n                      <id>default-jar</id>\r\n                      <phase>none</phase>\r\n                  </execution>\r\n              </executions>\r\n          </plugin>\r\n          <plugin>\r\n              <artifactId>maven-assembly-plugin</artifactId>\r\n              <configuration>\r\n                  <archive>\r\n                      <manifest>\r\n                          <mainClass>com.eme22.bolo.Bolo</mainClass>\r\n                      </manifest>\r\n                  </archive>\r\n                  <descriptorRefs>\r\n                      <descriptorRef>jar-with-dependencies</descriptorRef>\r\n                  </descriptorRefs>\r\n              </configuration>\r\n              <executions>\r\n                  <execution>\r\n                      <id>make-assembly</id> <!-- this is used for inheritance merges -->\r\n                      <phase>package</phase> <!-- bind to the packaging phase -->\r\n                      <goals>\r\n                          <goal>single</goal>\r\n                      </goals>\r\n                  </execution>\r\n              </executions>\r\n          </plugin>\r\n          <!--\r\n              <plugin>\r\n                  <groupId>org.apache.maven.plugins</groupId>\r\n                  <artifactId>maven-shade-plugin</artifactId>\r\n                  <version>2.3</version>\r\n                  <executions>\r\n                      <execution>\r\n                          <phase>package</phase>\r\n                          <goals>\r\n                              <goal>shade</goal>\r\n                          </goals>\r\n                          <configuration>\r\n                              <transformers>\r\n                                  <transformer\r\n                                          implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\r\n                                      <mainClass>com.eme22.bolo.Bolo</mainClass>\r\n                                  </transformer>\r\n                              </transformers>\r\n                              <shadedArtifactAttached>true</shadedArtifactAttached>\r\n                              <shadedClassifierName>jar-with-dependencies</shadedClassifierName>\r\n                              <outputDirectory>${maven.multiModuleProjectDirectory}/out/bolo2022</outputDirectory>\r\n                          </configuration>\r\n                      </execution>\r\n                  </executions>\r\n              </plugin>\r\n              <plugin>\r\n                  <groupId>com.heroku.sdk</groupId>\r\n                  <artifactId>heroku-maven-plugin</artifactId>\r\n                  <version>3.0.3</version>\r\n                  <configuration>\r\n                      <jdkVersion>11</jdkVersion>\r\n                      <appName>bolo2022</appName>\r\n                      <processTypes>\r\n                          <web>java -jar ./out/bolo2022/bolo-0.1.1-SNAPSHOT-jar-with-dependencies.jar</web>\r\n                      </processTypes>\r\n                  </configuration>\r\n              </plugin>\r\n              -->\r\n          </plugins>\r\n        </build>\r\n\r\n    \r\n    <properties>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <maven.compiler.source>1.8</maven.compiler.source>\r\n        <maven.compiler.target>1.8</maven.compiler.target>\r\n    </properties>\r\n    <distributionManagement>\r\n        <repository>\r\n            <id>github</id>\r\n            <name>eme22 Apache Maven Packages</name>\r\n            <url>https://maven.pkg.github.com/eme22/PGMUSICBOT</url>\r\n        </repository>\r\n    </distributionManagement>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision e59a9e33c37365adb08ea3a1aa6fcbe3d980854e)
+++ b/pom.xml	(date 1646248920562)
@@ -158,6 +158,14 @@
                   </execution>
               </executions>
           </plugin>
+          <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-compiler-plugin</artifactId>
+              <configuration>
+                  <source>9</source>
+                  <target>9</target>
+              </configuration>
+          </plugin>
           <!--
               <plugin>
                   <groupId>org.apache.maven.plugins</groupId>
Index: .github/workflows/test.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>name: Test\r\non:\r\n  push:\r\n    branches:\r\n    - master\r\n\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v2\r\n      - name: Set up JDK 11\r\n        uses: actions/setup-java@v2\r\n        with:\r\n          java-version: '11'\r\n          distribution: 'adopt'\r\n          cache: maven\r\n      - name: Build with Maven\r\n        run: mvn --batch-mode --update-snapshots verify\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
--- a/.github/workflows/test.yml	(revision e59a9e33c37365adb08ea3a1aa6fcbe3d980854e)
+++ b/.github/workflows/test.yml	(date 1646165087694)
@@ -16,4 +16,4 @@
           distribution: 'adopt'
           cache: maven
       - name: Build with Maven
-        run: mvn --batch-mode --update-snapshots verify
+        run: mvn --batch-mode --update-snapshots verify
\ No newline at end of file
Index: src/main/java/com/eme22/bolo/Bot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright 2018 John Grosh <john.a.grosh@gmail.com>.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npackage com.eme22.bolo;\r\n\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.ScheduledExecutorService;\r\n\r\nimport com.eme22.bolo.audio.AloneInVoiceHandler;\r\nimport com.eme22.bolo.audio.AudioHandler;\r\nimport com.eme22.bolo.audio.NowplayingHandler;\r\nimport com.eme22.bolo.audio.PlayerManager;\r\nimport com.eme22.bolo.gui.GUI;\r\nimport com.eme22.bolo.poll.PollManager;\r\nimport com.jagrosh.jdautilities.commons.waiter.EventWaiter;\r\nimport com.eme22.bolo.playlist.PlaylistLoader;\r\nimport com.eme22.bolo.settings.SettingsManager;\r\nimport java.util.Objects;\r\nimport net.dv8tion.jda.api.JDA;\r\nimport net.dv8tion.jda.api.entities.Activity;\r\nimport net.dv8tion.jda.api.entities.Guild;\r\n\r\n/**\r\n *\r\n * @author John Grosh <john.a.grosh@gmail.com>\r\n */\r\npublic class Bot\r\n{\r\n    private final EventWaiter waiter;\r\n    private final ScheduledExecutorService threadpool;\r\n    private final BotConfig config;\r\n    private final SettingsManager settings;\r\n    private final PlayerManager players;\r\n    private final PlaylistLoader playlists;\r\n    private final NowplayingHandler nowplaying;\r\n    private final AloneInVoiceHandler aloneInVoiceHandler;\r\n    private final PollManager polls;\r\n    \r\n    private boolean shuttingDown = false;\r\n    private JDA jda;\r\n    private GUI gui;\r\n    \r\n    public Bot(EventWaiter waiter, BotConfig config, SettingsManager settings)\r\n    {\r\n        this.waiter = waiter;\r\n        this.config = config;\r\n        this.settings = settings;\r\n        this.playlists = new PlaylistLoader(config);\r\n        this.threadpool = Executors.newSingleThreadScheduledExecutor();\r\n        this.players = new PlayerManager(this);\r\n        this.players.init();\r\n        this.nowplaying = new NowplayingHandler(this);\r\n        this.nowplaying.init();\r\n        this.aloneInVoiceHandler = new AloneInVoiceHandler(this);\r\n        this.aloneInVoiceHandler.init();\r\n        this.polls = new PollManager(this);\r\n    }\r\n    \r\n    public BotConfig getConfig()\r\n    {\r\n        return config;\r\n    }\r\n    \r\n    public SettingsManager getSettingsManager()\r\n    {\r\n        return settings;\r\n    }\r\n    \r\n    public EventWaiter getWaiter()\r\n    {\r\n        return waiter;\r\n    }\r\n    \r\n    public ScheduledExecutorService getThreadpool()\r\n    {\r\n        return threadpool;\r\n    }\r\n    \r\n    public PlayerManager getPlayerManager()\r\n    {\r\n        return players;\r\n    }\r\n    \r\n    public PlaylistLoader getPlaylistLoader()\r\n    {\r\n        return playlists;\r\n    }\r\n    \r\n    public NowplayingHandler getNowplayingHandler()\r\n    {\r\n        return nowplaying;\r\n    }\r\n\r\n    public AloneInVoiceHandler getAloneInVoiceHandler()\r\n    {\r\n        return aloneInVoiceHandler;\r\n    }\r\n    \r\n    public JDA getJDA()\r\n    {\r\n        return jda;\r\n    }\r\n    \r\n    public void closeAudioConnection(long guildId)\r\n    {\r\n        Guild guild = jda.getGuildById(guildId);\r\n        if(guild!=null)\r\n            threadpool.submit(() -> guild.getAudioManager().closeAudioConnection());\r\n    }\r\n    \r\n    public void resetGame()\r\n    {\r\n        Activity game = config.getGame()==null || config.getGame().getName().equalsIgnoreCase(\"none\") ? null : config.getGame();\r\n        if(!Objects.equals(jda.getPresence().getActivity(), game))\r\n            jda.getPresence().setActivity(game);\r\n    }\r\n\r\n    public void shutdown()\r\n    {\r\n        if(shuttingDown)\r\n            return;\r\n        shuttingDown = true;\r\n        threadpool.shutdownNow();\r\n        if(jda.getStatus()!=JDA.Status.SHUTTING_DOWN)\r\n        {\r\n            jda.getGuilds().forEach(g ->\r\n            {\r\n                g.getAudioManager().closeAudioConnection();\r\n                AudioHandler ah = (AudioHandler)g.getAudioManager().getSendingHandler();\r\n                if(ah!=null)\r\n                {\r\n                    ah.stopAndClear();\r\n                    ah.getPlayer().destroy();\r\n                    nowplaying.updateTopic(g.getIdLong(), ah, true);\r\n                }\r\n            });\r\n            jda.shutdown();\r\n        }\r\n        if(gui!=null)\r\n            gui.dispose();\r\n        System.exit(0);\r\n    }\r\n\r\n    public void setJDA(JDA jda)\r\n    {\r\n        this.jda = jda;\r\n    }\r\n    \r\n    public void setGUI(GUI gui)\r\n    {\r\n        this.gui = gui;\r\n    }\r\n\r\n    public PollManager getPollManager() { return polls; }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/eme22/bolo/Bot.java b/src/main/java/com/eme22/bolo/Bot.java
--- a/src/main/java/com/eme22/bolo/Bot.java	(revision e59a9e33c37365adb08ea3a1aa6fcbe3d980854e)
+++ b/src/main/java/com/eme22/bolo/Bot.java	(date 1646248882032)
@@ -26,7 +26,7 @@
 import com.eme22.bolo.poll.PollManager;
 import com.jagrosh.jdautilities.commons.waiter.EventWaiter;
 import com.eme22.bolo.playlist.PlaylistLoader;
-import com.eme22.bolo.settings.SettingsManager;
+import com.eme22.bolo.entities.SettingsManager;
 import java.util.Objects;
 import net.dv8tion.jda.api.JDA;
 import net.dv8tion.jda.api.entities.Activity;
Index: .github/workflows/maven.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.github/workflows/maven.yml b/.github/workflows/maven.yml
new file mode 100644
--- /dev/null	(date 1646165599597)
+++ b/.github/workflows/maven.yml	(date 1646165599597)
@@ -0,0 +1,38 @@
+# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
+# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
+
+name: Java CI with Maven
+
+on:
+  push:
+    branches: [ master ]
+  pull_request:
+    branches: [ master ]
+
+jobs:
+  build:
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v2
+      - name: Set up JDK 11
+        uses: actions/setup-java@v2
+        with:
+          java-version: '11'
+          distribution: 'temurin'
+          cache: maven
+      - name: Build with Maven
+        run: mvn --batch-mode --update-snapshots verify
+      - name: Archive Release
+        uses: thedoctor0/zip-release@master
+        with:
+          type: 'zip'
+          filename: 'release.zip'
+          exclusions: '*.git* /*node_modules/* .editorconfig .gitignore CNAME README.md system.properties *src* *.github* *.idea*'
+      - name: Generate Changelog
+        run: echo "${{ github.event.head_commit.message }}" > ${{ github.workspace }}-CHANGELOG.txt
+      - name: Release
+        uses: softprops/action-gh-release@v1
+        if: startsWith(github.ref, 'refs/tags/')
+        with:
+          body_path: ${{ github.workspace }}-CHANGELOG.txt
+          files: 'release.zip'
